/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"

#include "StdH.h"

#include <EntitiesMP/ParticlesHolder.h>
#include <EntitiesMP/ParticlesHolder_tables.h>
void CParticlesHolder::SetDefaultProperties(void) {
  m_phtType = PHT_SPIRAL ;
  m_ptTexture = PT_STAR01 ;
  m_ctCount = 16;
  m_fStretchAll = 1.0f;
  m_fStretchX = 1.0f;
  m_fStretchY = 1.0f;
  m_fStretchZ = 1.0f;
  m_strName = "";
  m_strDescription = "";
  m_bBackground = FALSE ;
  m_bTargetable = FALSE ;
  m_fSize = 0.1f;
  m_fParam1 = 1.0f;
  m_fParam2 = 1.0f;
  m_fParam3 = 1.0f;
  m_bActive = TRUE ;
  m_fActivateTime = 0.0f;
  m_fDeactivateTime = -10000.0f;
  m_fMipFactorDisappear = 8.0f;
  CMovableModelEntity::SetDefaultProperties();
}
  
#line 66 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
void CParticlesHolder::RenderParticles(void) 
#line 67 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{
#line 68 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(! m_bActive )
#line 69 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{
#line 70 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
return ;
#line 71 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}
#line 72 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
switch(m_phtType )
#line 73 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{
#line 74 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_SPIRAL : 
#line 75 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_Spiral  (this  , m_fStretchAll  , m_fStretchAll  / 2 , m_ptTexture  , m_ctCount );
#line 76 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 77 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_EMANATE : 
#line 78 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_Emanate  (this  , m_fStretchAll  , m_fStretchAll  / 2 , m_ptTexture  , m_ctCount  , m_fMipFactorDisappear );
#line 79 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 80 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_STARDUST : 
#line 81 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_Stardust  (this  , m_fStretchAll  , m_fStretchAll  / 2 , m_ptTexture  , m_ctCount );
#line 82 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 83 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_ATOMIC : 
#line 84 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_Atomic  (this  , m_fStretchAll  , m_fStretchAll  / 2 , m_ptTexture  , m_ctCount );
#line 85 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 86 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_RISING : 
#line 87 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_Rising  (this  , m_fActivateTime  , m_fDeactivateTime  , m_fStretchAll  , m_fStretchX  , m_fStretchY  , m_fStretchZ  , m_fSize  , m_ptTexture  , m_ctCount );
#line 88 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 89 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_FOUNTAIN : 
#line 90 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_Fountain  (this  , m_fStretchAll  , m_fStretchAll  / 2 , m_ptTexture  , m_ctCount );
#line 91 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 92 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_SMOKE : 
#line 93 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_GrenadeTrail  (this );
#line 94 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 95 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_BLOOD : 
#line 96 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_BloodTrail  (this );
#line 97 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 98 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_EMANATEPLANE : 
#line 99 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_EmanatePlane  (this  , 
#line 100 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fStretchX  , m_fStretchY  , m_fStretchZ  , m_fSize  , 
#line 101 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fParam1  , m_fParam2  , m_ptTexture  , m_ctCount  , m_fMipFactorDisappear );
#line 102 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 103 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_SANDFLOW : 
#line 104 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_SandFlow  (this  , m_fStretchAll  , m_fSize  , m_fParam1  , m_fActivateTime  , m_fDeactivateTime  , m_ctCount );
#line 105 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 106 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_WATERFLOW : 
#line 107 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_WaterFlow  (this  , m_fStretchAll  , m_fSize  , m_fParam1  , m_fActivateTime  , m_fDeactivateTime  , m_ctCount );
#line 108 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 109 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_LAVAFLOW : 
#line 110 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_LavaFlow  (this  , m_fStretchAll  , m_fSize  , m_fParam1  , m_fActivateTime  , m_fDeactivateTime  , m_ctCount );
#line 111 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 112 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_LAVAERUPTING : 
#line 113 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_LavaErupting  (this  , m_fStretchAll  , m_fSize  , m_fStretchX  , m_fStretchY  , m_fStretchZ  , m_fActivateTime );
#line 114 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 115 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_WATERFALLFOAM : 
#line 116 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_WaterfallFoam  (this  , 
#line 117 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fStretchX  , m_fStretchY  , m_fStretchZ  , m_fSize  , 
#line 118 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fParam1  , m_fParam2  , m_fParam3  , m_ctCount );
#line 119 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 120 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_CHIMNEYSMOKE : 
#line 121 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_ChimneySmoke  (this  , m_ctCount  , m_fStretchAll  , m_fMipFactorDisappear );
#line 122 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 123 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_ROCKETMOTOR : 
#line 124 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_RocketMotorBurning  (this  , m_ctCount  , 
#line 125 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
FLOAT3D (m_fStretchX  , m_fStretchY  , m_fStretchZ ) , m_fSize  , m_ctCount );
#line 126 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 127 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_COLLECT_ENERGY : 
#line 128 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_CollectEnergy  (this  , m_fActivateTime  , m_fActivateTime  + 2.0f);
#line 129 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 130 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_TWISTER : 
#line 131 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_Twister  (this  , 1.0f , 0.0f , 1e6 , 1.0f);
#line 132 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 133 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
case PHT_WATERFALL : 
#line 134 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Particles_Waterfall  (this  , m_ctCount  , m_fStretchAll  , m_fStretchX  , m_fStretchY  , m_fStretchZ  , 
#line 135 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fSize  , m_fMipFactorDisappear  , m_fParam1 );
#line 136 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
break ;
#line 137 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}
#line 138 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}
  
#line 139 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
BOOL CParticlesHolder::IsTargetable(void)const 
#line 140 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{
#line 141 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
return m_bTargetable ;
#line 142 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}
  
#line 145 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
void CParticlesHolder::MirrorAndStretch(FLOAT fStretch,BOOL bMirrorX) 
#line 146 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{
#line 147 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fStretchAll  *= fStretch ;
#line 148 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(bMirrorX ){
#line 149 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fStretchX  = - m_fStretchX ;
#line 150 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}
#line 151 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}
  
#line 154 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
void CParticlesHolder::StretchModel(void) {
#line 156 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(Abs  (m_fStretchX ) < 0.01f){m_fStretchX  = 0.01f;}
#line 157 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(Abs  (m_fStretchY ) < 0.01f){m_fStretchY  = 0.01f;}
#line 158 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(Abs  (m_fStretchZ ) < 0.01f){m_fStretchZ  = 0.01f;}
#line 159 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(m_fStretchAll  < 0.01f){m_fStretchAll  = 0.01f;}
#line 161 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(Abs  (m_fStretchX ) > 100.0f){m_fStretchX  = 100.0f * Sgn  (m_fStretchX );}
#line 162 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(Abs  (m_fStretchY ) > 100.0f){m_fStretchY  = 100.0f * Sgn  (m_fStretchY );}
#line 163 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(Abs  (m_fStretchZ ) > 100.0f){m_fStretchZ  = 100.0f * Sgn  (m_fStretchZ );}
#line 164 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(m_fStretchAll  > 100.0f){m_fStretchAll  = 100.0f;}
#line 166 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
GetModelObject  () -> StretchModel  (FLOAT3D (
#line 167 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fStretchAll  * m_fStretchX  , 
#line 168 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fStretchAll  * m_fStretchY  , 
#line 169 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fStretchAll  * m_fStretchZ ));
#line 170 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
ModelChangeNotify  ();
#line 171 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}
  
#line 173 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
CPlacement3D CParticlesHolder::GetLerpedPlacement(void)const 
#line 174 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{
#line 175 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
return CEntity  :: GetLerpedPlacement  ();
#line 176 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}
  
#line 180 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
SLONG CParticlesHolder::GetUsedMemory(void) 
#line 181 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{
#line 183 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
SLONG  slUsedMemory  = sizeof  (CParticlesHolder ) - sizeof  (CMovableModelEntity ) + CMovableModelEntity  :: GetUsedMemory  ();
#line 185 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
slUsedMemory  += m_strName  . Length  ();
#line 186 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
slUsedMemory  += m_strDescription  . Length  ();
#line 187 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
return slUsedMemory ;
#line 188 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}
BOOL CParticlesHolder::
#line 195 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Active(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CParticlesHolder_Active
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CParticlesHolder::Active expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 197 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_bActive  = TRUE ;
#line 198 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Jump(STATE_CURRENT,0x00df0003, FALSE, EInternal());return TRUE;}BOOL CParticlesHolder::H0x00df0003_Active_03(const CEntityEvent &__eeInput)
#line 199 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00df0003
if(!(TRUE )){ Jump(STATE_CURRENT,0x00df0004, FALSE, EInternal());return TRUE;}
#line 201 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
SetTimerAfter(m_fParam2  + FRnd  () * m_fParam3 );
Jump(STATE_CURRENT, 0x00df0001, FALSE, EBegin());return TRUE;}BOOL CParticlesHolder::H0x00df0001_Active_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00df0001
switch(__eeInput.ee_slEvent)
#line 202 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{case(EVENTCODE_ETimer):
#line 204 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{const ETimer&e= (ETimer&)__eeInput;

#line 206 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(m_phtType  == PHT_LAVAERUPTING )
#line 207 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{
#line 209 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fActivateTime  = _pTimer  -> CurrentTick  ();
#line 210 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}
#line 211 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
UnsetTimer();Jump(STATE_CURRENT,0x00df0002, FALSE, EInternal());return TRUE;
#line 212 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}ASSERT(FALSE);break;case(EVENTCODE_EBegin):
#line 214 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 215 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
return TRUE;
#line 216 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeactivate):
#line 218 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{const EDeactivate&e= (EDeactivate&)__eeInput;

#line 219 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fDeactivateTime  = _pTimer  -> CurrentTick  ();
#line 220 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Jump(STATE_CURRENT, STATE_CParticlesHolder_Inactive, TRUE, EVoid());return TRUE;
#line 221 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 222 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}return TRUE;}BOOL CParticlesHolder::H0x00df0002_Active_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00df0002
Jump(STATE_CURRENT,0x00df0003, FALSE, EInternal());return TRUE;
#line 223 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}BOOL CParticlesHolder::H0x00df0004_Active_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00df0004
 ASSERT(FALSE); return TRUE;};BOOL CParticlesHolder::
#line 227 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Inactive(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CParticlesHolder_Inactive
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CParticlesHolder::Inactive expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 228 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_bActive  = FALSE ;
#line 229 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00df0006, FALSE, EBegin());return TRUE;}BOOL CParticlesHolder::H0x00df0006_Inactive_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00df0006
switch(__eeInput.ee_slEvent)
#line 230 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EActivate):
#line 233 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
{const EActivate&e= (EActivate&)__eeInput;

#line 234 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fActivateTime  = _pTimer  -> CurrentTick  ();
#line 235 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fDeactivateTime  = _pTimer  -> CurrentTick  () + 10000.0f;
#line 236 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Jump(STATE_CURRENT, STATE_CParticlesHolder_Active, TRUE, EVoid());return TRUE;
#line 237 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 238 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}return TRUE;}BOOL CParticlesHolder::H0x00df0007_Inactive_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00df0007
 ASSERT(FALSE); return TRUE;};BOOL CParticlesHolder::
#line 241 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CParticlesHolder_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CParticlesHolder::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 243 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
InitAsEditorModel  ();
#line 244 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 245 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 248 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
StretchModel  ();
#line 249 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
SetModel  (MODEL_TELEPORT );
#line 250 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
ModelChangeNotify  ();
#line 251 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
SetModelMainTexture  (TEXTURE_TELEPORT );
#line 253 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(m_bBackground ){
#line 254 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
SetFlags  (GetFlags  () | ENF_BACKGROUND );
#line 255 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}else {
#line 256 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
SetFlags  (GetFlags  () & ~ ENF_BACKGROUND );
#line 257 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}
#line 259 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
en_fGravityA  = 30.0f;
#line 260 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
GetPitchDirection  (- 90.0f , en_vGravityDir );
#line 262 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fActivateTime  = 0.0f;
#line 263 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
m_fDeactivateTime  = - 10000.0f;
#line 265 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
if(m_bActive ){
#line 266 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Jump(STATE_CURRENT, STATE_CParticlesHolder_Active, TRUE, EVoid());return TRUE;
#line 267 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}else {
#line 268 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Jump(STATE_CURRENT, STATE_CParticlesHolder_Inactive, TRUE, EVoid());return TRUE;
#line 269 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
}
#line 272 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
Return(STATE_CURRENT,EVoid());
#line 272 "V:/Programs/SamSDK/Sources/EntitiesMP/ParticlesHolder.es"
return TRUE; ASSERT(FALSE); return TRUE;};