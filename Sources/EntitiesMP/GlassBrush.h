/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#ifndef _EntitiesMP_GlassBrush_INCLUDED
#define _EntitiesMP_GlassBrush_INCLUDED 1
#include <EntitiesMP/SoundHolder.h>
#include <EntitiesMP\MirrorMarker.h>
#include <EntitiesMP/Debris.h>
#define EVENTCODE_EGBrushDestroyed 0x02bc0000
class DECL_DLL EGBrushDestroyed : public CEntityEvent {
public:
EGBrushDestroyed();
CEntityEvent *MakeCopy(void);
};
DECL_DLL inline void ClearToDefault(EGBrushDestroyed &e) { e = EGBrushDestroyed(); } ;
extern DECL_DLL CEntityPropertyEnumType TouchOrDamageBrushEvent_enum;
enum TouchOrDamageBrushEvent {
  TDE_TOUCHONLY = 0,
  TDE_DAMAGEONLY = 1,
  TDE_BOTH = 2,
};
DECL_DLL inline void ClearToDefault(TouchOrDamageBrushEvent &e) { e = (TouchOrDamageBrushEvent)0; } ;
extern DECL_DLL CEntityPropertyEnumType DebrisType_enum;
enum DebrisType {
  DT_GLASS = 0,
  DT_STONE = 1,
  DT_WOOD = 2,
  DT_METAL = 3,
};
DECL_DLL inline void ClearToDefault(DebrisType &e) { e = (DebrisType)0; } ;
extern "C" DECL_DLL CDLLEntityClass CGlassBrush_DLLClass;
class CGlassBrush : public CMovableBrushEntity {
public:
virtual const CTString &GetName(void) const { return m_strName; };
virtual BOOL IsTargetable(void) const { return TRUE; };
  DECL_DLL virtual void SetDefaultProperties(void);
  CTString m_strName;
  CTString m_strDescription;
  FLOAT m_fHealth;
  BOOL m_bBlowupByBull;
  BOOL m_bBlowupByDamager;
  enum EventEType m_eetBlowupEvent;
  CEntityPointer m_penBlowupEvent;
  BOOL m_bZoning;
  CEntityPointer m_penSoundDestroy;
  CSoundObject m_soDestroy;
  COLOR m_colDebrises;
  INDEX m_ctDebrises;
  FLOAT m_fCandyEffect;
  FLOAT m_fCubeFactor;
  enum DebrisType m_dtDebrisType;
  BOOL m_bDynamicShadows;
  FLOAT m_fTouchDamage;
  enum EventEType m_eetTouchEvent;
  CEntityPointer m_penTouchEvent;
  enum TouchOrDamageBrushEvent m_tdeSendEventOnDamage;
   
#line 94 "V:/Programs/SamSDK/Sources/EntitiesMP/GlassBrush.es"
void Precache(void);
   
#line 109 "V:/Programs/SamSDK/Sources/EntitiesMP/GlassBrush.es"
void PlayDestroySound(void);
   
#line 118 "V:/Programs/SamSDK/Sources/EntitiesMP/GlassBrush.es"
void GetDebrisModelTexture(INDEX & iModel,INDEX & iTexture);
   
#line 141 "V:/Programs/SamSDK/Sources/EntitiesMP/GlassBrush.es"
INDEX GetDebrisImpactType(void);
   
#line 152 "V:/Programs/SamSDK/Sources/EntitiesMP/GlassBrush.es"
BOOL CanReactOnEntity(CEntity * pen);
   
#line 162 "V:/Programs/SamSDK/Sources/EntitiesMP/GlassBrush.es"
void ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 163 "V:/Programs/SamSDK/Sources/EntitiesMP/GlassBrush.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection);
#define  STATE_CGlassBrush_Main 1
  BOOL 
#line 189 "V:/Programs/SamSDK/Sources/EntitiesMP/GlassBrush.es"
Main(const CEntityEvent &__eeInput);
  BOOL H0x02bc0001_Main_01(const CEntityEvent &__eeInput);
  BOOL H0x02bc0002_Main_02(const CEntityEvent &__eeInput);
};
#endif // _EntitiesMP_GlassBrush_INCLUDED
