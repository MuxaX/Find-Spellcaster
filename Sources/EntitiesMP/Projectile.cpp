/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"

#include "StdH.h"
#include "Models/Weapons/Laser/Projectile/LaserProjectile.h"
#include "EntitiesMP/EnemyBase.h"
//#include "EntitiesMP/Dragonman.h"
#include "Models/Enemies/Elementals/Projectile/IcePyramid.h"
#include "Models/Enemies/ElementalLava/Projectile/LavaStone.h"
#include "Models/Enemies/ElementalLava/Projectile/LavaBomb.h"
#include "Models/Enemies/Headman/Projectile/Blade.h"
#include "Models/Enemies/Huanman/Projectile/Projectile.h"
#include "Models/Enemies/Cyborg/Projectile/LaserProjectile.h"
  
#include "ModelsMP/Enemies/Grunt/Projectile/GruntProjectile.h"
#include "ModelsMP/Enemies/Guffy/Projectile/GuffyProjectile.h"

#include "ModelsMP/Enemies/ExotechLarva/Weapons/PlasmaGun.h"

#include "EntitiesMP/PlayerWeapons.h"
#include "EntitiesMP/Shooter.h"

#define DEVIL_LASER_SPEED 100.0f
#define DEVIL_ROCKET_SPEED 60.0f

#include <EntitiesMP/Projectile.h>
#include <EntitiesMP/Projectile_tables.h>
CEntityEvent *ELaunchProjectile::MakeCopy(void) { CEntityEvent *peeCopy = new ELaunchProjectile(*this); return peeCopy;}
ELaunchProjectile::ELaunchProjectile() : CEntityEvent(EVENTCODE_ELaunchProjectile) {;
 ClearToDefault(penLauncher);
 ClearToDefault(prtType);
 ClearToDefault(fSpeed);
 ClearToDefault(fStretch);
};
#line 113 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"

#define DRAGONMAN_NORMAL 0
#define DRAGONMAN_STRONG 1

#define ELEMENTAL_LARGE   2
#define ELEMENTAL_BIG     1
#define ELEMENTAL_NORMAL  0

#define ELEMENTAL_STONEMAN 0
#define ELEMENTAL_LAVAMAN  1
#define ELEMENTAL_ICEMAN   2

void CProjectile_OnInitClass(void)
{
}

void CProjectile_OnPrecache(CDLLEntityClass *pdec, INDEX iUser) 
{
  pdec->PrecacheTexture(TEX_REFL_BWRIPLES01);
  pdec->PrecacheTexture(TEX_REFL_BWRIPLES02);
  pdec->PrecacheTexture(TEX_REFL_LIGHTMETAL01);
  pdec->PrecacheTexture(TEX_REFL_LIGHTBLUEMETAL01);
  pdec->PrecacheTexture(TEX_REFL_DARKMETAL);
  pdec->PrecacheTexture(TEX_REFL_PURPLE01);

  pdec->PrecacheTexture(TEX_SPEC_WEAK);
  pdec->PrecacheTexture(TEX_SPEC_MEDIUM);
  pdec->PrecacheTexture(TEX_SPEC_STRONG);

  switch ((ProjectileType)iUser) {
  case PRT_ROCKET                :
  case PRT_WALKER_ROCKET         :
  case PRT_DEVIL_ROCKET          :
    pdec->PrecacheModel(MODEL_ROCKET  );
    pdec->PrecacheTexture(TEXTURE_ROCKET);
    pdec->PrecacheSound(SOUND_FLYING  );
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_ROCKET);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_ROCKET_PLANE);
    break;
  case PRT_GRENADE:
    pdec->PrecacheModel(MODEL_GRENADE);
    pdec->PrecacheTexture(TEXTURE_GRENADE);
    pdec->PrecacheSound(SOUND_GRENADE_BOUNCE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE_PLANE);
    break;
  case PRT_ALT_GRANAT:
    pdec->PrecacheModel(MODEL_ALT_GRENADE);
    pdec->PrecacheTexture(TEXTURE_ALT_GRENADE);
    pdec->PrecacheSound(SOUND_GRENADE_BOUNCE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE_PLANE);  
  
  case PRT_FLAME:
    pdec->PrecacheModel(MODEL_FLAME);
    pdec->PrecacheClass(CLASS_FLAME);
    break;

  case PRT_LASER_RAY:
    pdec->PrecacheModel(MODEL_LASER                   );
    pdec->PrecacheTexture(TEXTURE_GREEN_LASER         );
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LASERWAVE);
    break;
	
  case PRT_LASER_BLUE:
    pdec->PrecacheModel(MODEL_LASER_BLUE                   );
    pdec->PrecacheTexture(TEXTURE_LASER_BLUE               );
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LASERBLUE);
    break;

  case PRT_GRUNT_PROJECTILE_SOL:
    pdec->PrecacheModel(MODEL_GRUNT_PROJECTILE           );
    pdec->PrecacheTexture(TEXTURE_GRUNT_PROJECTILE_01    );
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LASERWAVE);
    break;

  case PRT_GRUNT_PROJECTILE_COM:
    pdec->PrecacheModel(MODEL_GRUNT_PROJECTILE           );
    pdec->PrecacheTexture(TEXTURE_GRUNT_PROJECTILE_02    );
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LASERWAVE);
    break;

  case PRT_CATMAN_FIRE:
    pdec->PrecacheModel(MODEL_CATMAN_FIRE             );
    pdec->PrecacheTexture(TEXTURE_CATMAN_FIRE         );
    break;

  case PRT_HEADMAN_FIRECRACKER:
    pdec->PrecacheModel(MODEL_HEADMAN_FIRECRACKER     );
    pdec->PrecacheTexture(TEXTURE_HEADMAN_FIRECRACKER );
    break;
  case PRT_HEADMAN_ROCKETMAN:
    pdec->PrecacheModel(MODEL_HEADMAN_BLADE           );
    pdec->PrecacheTexture(TEXTURE_HEADMAN_BLADE       );
    pdec->PrecacheModel(MODEL_HEADMAN_BLADE_FLAME     );
    pdec->PrecacheTexture(TEXTURE_HEADMAN_BLADE_FLAME );
    break;
  case PRT_HEADMAN_BOMBERMAN:
    pdec->PrecacheModel(MODEL_HEADMAN_BOMB         );
    pdec->PrecacheTexture(TEXTURE_HEADMAN_BOMB     );  
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_BOMB);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE_PLANE);
    break;

  case PRT_BONEMAN_FIRE:
    pdec->PrecacheModel(MODEL_BONEMAN_FIRE         );
    pdec->PrecacheTexture(TEXTURE_BONEMAN_FIRE     );
    break;

  case PRT_WOMAN_FIRE:
    pdec->PrecacheModel(MODEL_WOMAN_FIRE           );
    pdec->PrecacheTexture(TEXTURE_WOMAN_FIRE       );
    break;

  case PRT_DRAGONMAN_FIRE:
  case PRT_DRAGONMAN_STRONG_FIRE:
    pdec->PrecacheModel(MODEL_DRAGONMAN_FIRE       );
    pdec->PrecacheTexture(TEXTURE_DRAGONMAN_FIRE1  );
    pdec->PrecacheTexture(TEXTURE_DRAGONMAN_FIRE2  );
    break;

  case PRT_STONEMAN_FIRE:
  case PRT_STONEMAN_BIG_FIRE:
  case PRT_STONEMAN_LARGE_FIRE:
    pdec->PrecacheModel(MODEL_ELEM_STONE           );
    pdec->PrecacheTexture(TEXTURE_ELEM_STONE       ); 
    break;
  case PRT_LAVAMAN_BIG_BOMB:
  case PRT_LAVAMAN_BOMB:
  case PRT_LAVAMAN_STONE:
    pdec->PrecacheModel(MODEL_ELEM_LAVA_STONE);
    pdec->PrecacheModel(MODEL_ELEM_LAVA_STONE_FLARE);
    pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB);
    pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB_FLARE);
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_STONE); 
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_STONE_FLARE ); 
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB); 
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB_FLARE); 
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
    pdec->PrecacheClass(CLASS_BLOOD_SPRAY);
    break;
  case PRT_METEOR:
    pdec->PrecacheSound(SOUND_FLYING  );
    pdec->PrecacheSound(SOUND_METEOR_BLAST  );
    pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB);
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB); 
    pdec->PrecacheClass(CLASS_BLOOD_SPRAY);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_CANNON);

    break;

  case PRT_ICEMAN_FIRE:
  case PRT_ICEMAN_BIG_FIRE:
  case PRT_ICEMAN_LARGE_FIRE:
    pdec->PrecacheModel(MODEL_ELEM_ICE          );  
    pdec->PrecacheModel(MODEL_ELEM_ICE_FLARE    );  
    pdec->PrecacheTexture(TEXTURE_ELEM_ICE      );    
  //pdec->PrecacheTexture(TEXTURE_ELEM_ICE_FLARE);    
    break;

  case PRT_HUANMAN_FIRE:
    pdec->PrecacheModel(MODEL_HUANMAN_FIRE      );
    pdec->PrecacheTexture(TEXTURE_HUANMAN_FIRE  );
    pdec->PrecacheModel(MODEL_HUANMAN_FLARE     );
    pdec->PrecacheTexture(TEXTURE_HUANMAN_FLARE );
    break;

  case PRT_FISHMAN_FIRE:
    pdec->PrecacheModel(MODEL_FISHMAN_FIRE      );
    pdec->PrecacheTexture(TEXTURE_FISHMAN_FIRE  );
    break;

  case PRT_MANTAMAN_FIRE:
    pdec->PrecacheModel(MODEL_MANTAMAN_FIRE     );
    pdec->PrecacheTexture(TEXTURE_MANTAMAN_FIRE );
    break;

  case PRT_DEVIL_LASER:         
    /*
    pdec->PrecacheModel(MODEL_DEVIL_LASER      );
    pdec->PrecacheTexture(TEXTURE_DEVIL_LASER  ); 
    break;
    */

  case PRT_CYBORG_LASER:         
  case PRT_CYBORG_BOMB:
    pdec->PrecacheModel(MODEL_CYBORG_LASER      );
    pdec->PrecacheTexture(TEXTURE_CYBORG_LASER  ); 
    pdec->PrecacheModel(MODEL_CYBORG_BOMB       );
    pdec->PrecacheTexture(TEXTURE_CYBORG_BOMB   ); 
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_BOMB);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE_PLANE);
    break;

  case PRT_LAVA_COMET:
    pdec->PrecacheModel(MODEL_ELEM_LAVA_STONE);
    pdec->PrecacheModel(MODEL_ELEM_LAVA_STONE_FLARE);
    pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB);
    pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB_FLARE);
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_STONE); 
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_STONE_FLARE ); 
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB); 
    pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB_FLARE); 
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
    pdec->PrecacheClass(CLASS_BLOOD_SPRAY);
    pdec->PrecacheModel(MODEL_LAVA          );
    pdec->PrecacheTexture(TEXTURE_LAVA      );
    pdec->PrecacheModel(MODEL_LAVA_FLARE    );
    pdec->PrecacheTexture(TEXTURE_LAVA_FLARE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
    pdec->PrecacheClass(CLASS_BLOOD_SPRAY);
    break;
  case PRT_BEAST_PROJECTILE:
  case PRT_BEAST_DEBRIS:
    pdec->PrecacheSound(SOUND_BEAST_FLYING  );
    pdec->PrecacheModel(MODEL_BEAST_FIRE);
    pdec->PrecacheTexture(TEXTURE_BEAST_FIRE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_CANNON);
    break;
  case PRT_GUFFY_PROJECTILE:
    pdec->PrecacheSound(SOUND_FLYING                   );
    pdec->PrecacheModel(MODEL_GUFFY_PROJECTILE         );
    pdec->PrecacheTexture(TEXTURE_GUFFY_PROJECTILE     );
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_ROCKET );
    break;
  case PRT_BEAST_BIG_PROJECTILE:
  case PRT_DEVIL_GUIDED_PROJECTILE:
  case PRT_BEAST_BIG_DEBRIS:
  case PRT_SHOOTER_FIREBALL:
    pdec->PrecacheSound(SOUND_BEAST_FLYING  );
    pdec->PrecacheModel(MODEL_BEAST_FIRE);
    pdec->PrecacheTexture(TEXTURE_BEAST_BIG_FIRE);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LIGHT_CANNON);
    break;
  case PRT_DEMON_FIREBALL:
  case PRT_DEMON_FIREBALL_DEBRIS:
    pdec->PrecacheSound(SOUND_DEMON_FLYING  );
    pdec->PrecacheModel(MODEL_DEMON_FIREBALL);
    pdec->PrecacheTexture(TEXTURE_DEMON_FIREBALL);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LIGHT_CANNON);
    break;
  case PRT_LARVA_PLASMA:
    pdec->PrecacheSound(SOUND_DEMON_FLYING  );
    pdec->PrecacheModel(MODEL_LARVA_PLASMA);
    pdec->PrecacheTexture(TEXTURE_LARVA_PLASMA);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LIGHT_CANNON);    
    break;
  case PRT_LARVA_TAIL_PROJECTILE:
    pdec->PrecacheSound(SOUND_LARVETTE  );
    pdec->PrecacheModel(MODEL_LARVA_TAIL);
    pdec->PrecacheTexture(TEXTURE_LARVA_TAIL);
    pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_CANNON);
    break;
  case PRT_SHOOTER_WOODEN_DART:
    pdec->PrecacheModel(MODEL_SHTR_WOODEN_DART);
    pdec->PrecacheTexture(TEX_SHTR_WOODEN_DART);
    break;
  case PRT_SHOOTER_FLAME:
    pdec->PrecacheModel(MODEL_FLAME);
    pdec->PrecacheClass(CLASS_FLAME);
    break;
  case PRT_AIRELEMENTAL_WIND:
    pdec->PrecacheModel(MODEL_WINDBLAST);
    pdec->PrecacheTexture(TEXTURE_WINDBLAST);    
    break;
  case PRT_AFTERBURNER_DEBRIS:
    pdec->PrecacheModel(MODEL_MARKER);
    pdec->PrecacheTexture(TEXTURE_MARKER);    
    break;
  default:
    ASSERT(FALSE);
  }
}

void CProjectile::SetDefaultProperties(void) {
  m_penLauncher = NULL;
  m_prtType = PRT_ROCKET ;
  m_pmtMove = PMT_FLYING ;
  m_penParticles = NULL;
  m_penTarget = NULL;
  m_penLastDamaged = NULL;
  m_fSpeed = 0.0f;
  m_fIgnoreTime = 0.0f;
  m_fFlyTime = 0.0f;
  m_fStartTime = 0.0f;
  m_fDamageAmount = 0.0f;
  m_fRangeDamageAmount = 0.0f;
  m_fDamageHotSpotRange = 0.0f;
  m_fDamageFallOffRange = 0.0f;
  m_fSoundRange = 0.0f;
  m_bExplode = FALSE ;
  m_bLightSource = FALSE ;
  m_bCanHitHimself = FALSE ;
  m_bCanBeDestroyed = FALSE ;
  m_fWaitAfterDeath = 0.0f;
  m_aRotateSpeed = 0.0f;
  m_tmExpandBox = 0.0f;
  m_tmInvisibility = 0.0f;
  m_iRebounds = 0;
  m_fStretch = 1.0f;
  m_soEffect.SetOwner(this);
m_soEffect.Stop_internal();
  m_soExplosion.SetOwner(this);
m_soExplosion.Stop_internal();
  m_fGuidedMaxSpeedFactor = 30.0f;
  bLockedOn = TRUE ;
  m_bLeftFlame = FALSE ;
  m_penPrediction = NULL;
  CMovableModelEntity::SetDefaultProperties();
}
  
#line 609 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PreMoving(void) {
#line 610 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_tmExpandBox  > 0){
#line 611 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(_pTimer  -> CurrentTick  () > m_fStartTime  + m_tmExpandBox ){
#line 612 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ChangeCollisionBoxIndexWhenPossible  (1);
#line 613 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0;
#line 614 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 615 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 616 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CMovableModelEntity  :: PreMoving  ();
#line 617 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 620 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PostMoving(void) {
#line 621 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CMovableModelEntity  :: PostMoving  ();
#line 623 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_FLAME  || m_prtType  == PRT_SHOOTER_FLAME ){
#line 625 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CContentType  & ctDn  = GetWorld  () -> wo_actContentTypes  [ en_iDnContent  ];
#line 627 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(! (ctDn  . ct_ulFlags  & CTF_BREATHABLE_LUNGS )){
#line 628 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 629 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SendEvent  (EEnd  ());
#line 630 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 631 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 632 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 635 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::Read_t(CTStream * istr) 
#line 636 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 637 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CMovableModelEntity  :: Read_t  (istr );
#line 639 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_bLightSource ){
#line 640 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetupLightSource  (TRUE );
#line 641 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 642 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  void CProjectile::DumpSync_t(CTStream & strm,INDEX iExtensiveSyncCheck) 
#line 646 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 647 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CMovableModelEntity  :: DumpSync_t  (strm  , iExtensiveSyncCheck );
#line 648 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
strm  . FPrintF_t  ("projectile type: %d\n" , m_prtType );
#line 649 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
strm  . FPrintF_t  ("launcher:");
#line 650 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_penLauncher  != NULL ){
#line 651 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
strm  . FPrintF_t  ("id:%05d '%s'(%s) (%g, %g, %g)\n" , 
#line 652 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penLauncher  -> en_ulID  , 
#line 653 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penLauncher  -> GetName  () , m_penLauncher  -> GetClass  () -> ec_pdecDLLClass  -> dec_strName  , 
#line 654 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penLauncher  -> GetPlacement  () . pl_PositionVector  (1) , 
#line 655 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penLauncher  -> GetPlacement  () . pl_PositionVector  (2) , 
#line 656 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penLauncher  -> GetPlacement  () . pl_PositionVector  (3));
#line 657 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 658 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
strm  . FPrintF_t  ("<none>\n");
#line 659 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 660 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 663 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CLightSource * CProjectile::GetLightSource(void) 
#line 664 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 665 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_bLightSource  && ! IsPredictor  ()){
#line 666 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return & m_lsLightSource ;
#line 667 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 668 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return NULL ;
#line 669 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 670 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  void CProjectile::Copy(CEntity & enOther,ULONG ulFlags) 
#line 673 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 674 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CMovableModelEntity  :: Copy  (enOther  , ulFlags );
#line 675 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CProjectile  * penOther  = (CProjectile  *) (& enOther );
#line 676 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(ulFlags  & COPY_PREDICTOR ){
#line 679 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 680 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 681 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 683 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL CProjectile::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 684 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 686 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CModelObject * pmo  = GetModelObject  ();
#line 687 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((pmo  != NULL ) && (_pTimer  -> GetLerpedCurrentTick  () < (m_fStartTime  + m_tmInvisibility )))
#line 688 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 690 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pmo  -> mo_colBlendColor  = 0;
#line 691 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 692 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
else 
#line 693 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 695 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pmo  -> mo_colBlendColor  = C_WHITE  | CT_OPAQUE ;
#line 696 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 697 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return CEntity  :: AdjustShadingParameters  (vLightDirection  , colLight  , colAmbient );
#line 698 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 701 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::SetupLightSource(BOOL bLive) 
#line 702 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 704 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CLightSource  lsNew ;
#line 705 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_ulFlags  = LSF_NONPERSISTENT  | LSF_DYNAMIC ;
#line 706 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rHotSpot  = 0.0f;
#line 707 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
switch(m_prtType ){
#line 708 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ROCKET : 
#line 709 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ALT_GRANAT : 
#line 710 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_WALKER_ROCKET : 
#line 711 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_ROCKET : 
#line 712 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bLive )
#line 713 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 714 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = 0xA0A080FF;
#line 715 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 716 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
else 
#line 717 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 718 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_BLACK  | CT_OPAQUE ;
#line 719 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 720 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 5.0f;
#line 721 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftYellowStarRedRingFar ;
#line 722 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 723 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GUFFY_PROJECTILE : 
#line 724 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_BLUE ;
#line 725 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 726 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 727 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GRENADE : 
#line 728 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = 0x2F1F0F00;
#line 729 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 2.0f;
#line 730 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rHotSpot  = 0.2f;
#line 731 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftYellowStarRedRingFar ;
#line 732 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 733 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_FLAME : 
#line 734 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dORANGE ;
#line 735 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.0f;
#line 736 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 737 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 738 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LASER_RAY : 
#line 739 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_vdGREEN ;
#line 740 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 741 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 742 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 743 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LASER_BLUE : 
#line 744 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_OXYGEN ;
#line 745 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 3.0f;
#line 746 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 747 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 748 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GRUNT_PROJECTILE_SOL : 
#line 749 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = 0xFCE90F00;
#line 750 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 751 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 752 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 753 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GRUNT_PROJECTILE_COM : 
#line 754 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_vdRED ;
#line 755 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 756 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 757 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 758 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_CATMAN_FIRE : 
#line 759 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_BLUE ;
#line 760 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 3.5f;
#line 761 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftCatmanFireGlow ;
#line 762 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 763 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_FIRECRACKER : 
#line 764 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_ORANGE ;
#line 765 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 766 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 767 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 768 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_ROCKETMAN : 
#line 769 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_YELLOW ;
#line 770 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 771 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 772 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 773 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_WOMAN_FIRE : 
#line 774 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_WHITE ;
#line 775 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 3.5f;
#line 776 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftCatmanFireGlow ;
#line 777 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 778 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DRAGONMAN_FIRE : 
#line 779 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_YELLOW ;
#line 780 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 3.5f;
#line 781 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftProjectileYellowBubbleGlow ;
#line 782 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 783 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DRAGONMAN_STRONG_FIRE : 
#line 784 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_RED ;
#line 785 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 3.5f;
#line 786 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftProjectileStarGlow ;
#line 787 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 788 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HUANMAN_FIRE : 
#line 789 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_lBLUE ;
#line 790 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 2.0f;
#line 791 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 792 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 793 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_FISHMAN_FIRE : 
#line 794 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_lBLUE ;
#line 795 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 2.0f;
#line 796 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 797 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 798 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_MANTAMAN_FIRE : 
#line 799 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_lBLUE ;
#line 800 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 2.0f;
#line 801 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 802 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 803 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_CYBORG_LASER : 
#line 804 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dBLUE ;
#line 805 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.5f;
#line 806 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 807 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 808 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_LASER : 
#line 809 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dBLUE ;
#line 810 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 5.0f;
#line 811 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftYellowStarRedRingFar ;
#line 812 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 813 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LARVA_PLASMA : 
#line 814 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dBLUE ;
#line 815 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 5.0f;
#line 816 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftCatmanFireGlow ;
#line 817 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 818 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FIREBALL : 
#line 819 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dORANGE ;
#line 820 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 5.0f;
#line 821 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = & _lftYellowStarRedRingFar ;
#line 822 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 823 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FLAME : 
#line 824 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dORANGE ;
#line 825 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.0f;
#line 826 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 827 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 828 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
default  : 
#line 829 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ASSERTALWAYS  ("Unknown light source");
#line 830 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 831 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_ubPolygonalMask  = 0;
#line 832 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
lsNew  . ls_paoLightAnimation  = NULL ;
#line 834 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_lsLightSource  . ls_penEntity  = this ;
#line 835 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_lsLightSource  . SetLightSource  (lsNew );
#line 836 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 839 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::RenderParticles(void) {
#line 840 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
switch(m_prtType ){
#line 841 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ALT_GRANAT : 
#line 842 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ROCKET : Particles_RocketTrail  (this  , 3.0f);break ;
#line 843 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_WALKER_ROCKET : Particles_RocketTrail  (this  , 1.0f);break ;
#line 844 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_ROCKET : Particles_RocketTrail  (this  , 8.0f);break ;
#line 845 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GUFFY_PROJECTILE : break ;
#line 846 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GRENADE : {
#line 848 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedRatio  = en_vCurrentTranslationAbsolute  . Length  () / 140.0f;
#line 849 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_CannonBall  (this  , fSpeedRatio );
#line 850 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 851 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 852 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_FLAME : {
#line 854 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fLeaderLiving  , fFollowerLiving  , fInFrontLiving ;
#line 855 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fInFrontLiving  = 0.05f;
#line 856 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fLeaderLiving  = _pTimer  -> GetLerpedCurrentTick  () - m_fStartTime ;
#line 858 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_penParticles  != NULL  && ! (m_penParticles  -> GetFlags  () & ENF_DELETED )){
#line 859 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirLeader  = en_vCurrentTranslationAbsolute ;
#line 860 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
vDirLeader  . Normalize  ();
#line 862 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsOfClass  (m_penParticles  , "Projectile"))
#line 863 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 864 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CProjectile  & prLast  = (CProjectile  &) * m_penParticles ;
#line 866 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsOfClass  (prLast  . m_penParticles  , "Player Weapons"))
#line 867 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 868 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlayerWeapons  & plw  = (CPlayerWeapons  &) * prLast  . m_penParticles ;
#line 869 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(! (plw  . GetPlayer  () -> GetFlags  () & ENF_ALIVE ))
#line 870 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 871 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return ;
#line 872 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 873 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plPipe  , plInFrontOfPipe ;
#line 874 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
((CPlayerWeapons  &) * prLast  . m_penParticles ) . GetFlamerSourcePlacement  (plPipe  , plInFrontOfPipe );
#line 875 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fFollowerLiving  = _pTimer  -> GetLerpedCurrentTick  () - ((CProjectile  &) * m_penParticles ) . m_fStartTime ;
#line 876 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirPipeFront ;
#line 877 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
AnglesToDirectionVector  (plInFrontOfPipe  . pl_OrientationAngle  , vDirPipeFront );
#line 878 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
vDirPipeFront  . Normalize  ();
#line 879 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_FlameThrower  (GetLerpedPlacement  () , plInFrontOfPipe  , 
#line 880 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
vDirLeader  , vDirPipeFront  , 
#line 881 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fLeaderLiving  , fInFrontLiving  , en_ulID  , FALSE );
#line 882 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 884 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
else 
#line 885 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 886 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fFollowerLiving  = _pTimer  -> GetLerpedCurrentTick  () - ((CProjectile  &) * m_penParticles ) . m_fStartTime ;
#line 887 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirFollower  = ((CMovableModelEntity  *) (CEntity  *) m_penParticles ) -> en_vCurrentTranslationAbsolute ;
#line 888 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
vDirFollower  . Normalize  ();
#line 889 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_FlameThrower  (GetLerpedPlacement  () , m_penParticles  -> GetLerpedPlacement  () , 
#line 890 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
vDirLeader  , vDirFollower  , fLeaderLiving  , fFollowerLiving  , en_ulID  , FALSE );
#line 891 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 893 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else if(IsOfClass  (m_penParticles  , "Player Weapons")){
#line 894 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlayerWeapons  & plw  = (CPlayerWeapons  &) * m_penParticles ;
#line 895 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(! (plw  . GetPlayer  () -> GetFlags  () & ENF_ALIVE ))
#line 896 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 897 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return ;
#line 898 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 899 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plPipe  , plInFrontOfPipe ;
#line 900 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
plw  . GetFlamerSourcePlacement  (plPipe  , plInFrontOfPipe );
#line 901 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirPipeFront ;
#line 902 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
AnglesToDirectionVector  (plInFrontOfPipe  . pl_OrientationAngle  , vDirPipeFront );
#line 903 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vViewDir ;
#line 904 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
AnglesToDirectionVector  (plPipe  . pl_OrientationAngle  , vViewDir );
#line 905 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirFollower  = vViewDir  . Normalize  ();
#line 913 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_FlameThrower  (plInFrontOfPipe  , plPipe  , 
#line 914 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
vDirPipeFront  , vDirFollower  , 
#line 915 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fInFrontLiving  , 0.0f , en_ulID  , TRUE );
#line 917 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_FlameThrowerStart  (plPipe  , plw  . m_tmFlamerStart  , plw  . m_tmFlamerStop );
#line 918 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 919 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 920 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 921 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 922 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LASER_BLUE : Particles_LaserBlueTrail  (this  , 5.0f);break ;
#line 923 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_CATMAN_FIRE : Particles_RocketTrail  (this  , 1.0f);break ;
#line 924 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_FIRECRACKER : Particles_FirecrackerTrail  (this );break ;
#line 925 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_ROCKETMAN : Particles_Fireball01Trail  (this );break ;
#line 926 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_BOMBERMAN : Particles_BombTrail  (this );break ;
#line 927 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVA_COMET : Particles_LavaTrail  (this );break ;
#line 928 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BIG_BOMB : Particles_LavaBombTrail  (this  , 4.0f);break ;
#line 929 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BOMB : Particles_LavaBombTrail  (this  , 1.0f);break ;
#line 930 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_PROJECTILE : Particles_BeastProjectileTrail  (this  , 2.0f , 0.25f , 48);break ;
#line 931 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_PROJECTILE : 
#line 932 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEMON_FIREBALL : 
#line 933 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_BeastBigProjectileTrail  (this  , 4.0f , 0.25f , 0.0f , 64);
#line 934 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_AfterBurner  (this  , m_fStartTime  , 1.0f);
#line 935 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 936 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_GUIDED_PROJECTILE : 
#line 937 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_BeastBigProjectileTrail  (this  , 6.0f , 0.375f , 0.0f , 64);
#line 938 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 939 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_DEBRIS : Particles_BeastProjectileDebrisTrail  (this  , 0.20f);break ;
#line 940 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_DEBRIS : Particles_BeastProjectileDebrisTrail  (this  , 0.25f);break ;
#line 941 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_WOODEN_DART : Particles_RocketTrail  (this  , 0.25f);break ;
#line 942 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FIREBALL : Particles_Fireball01Trail  (this );break ;
#line 943 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FLAME : {
#line 945 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fTimeElapsed  , fParticlesTimeElapsed ;
#line 946 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fTimeElapsed  = _pTimer  -> GetLerpedCurrentTick  () - m_fStartTime ;
#line 948 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_penParticles  != NULL  && ! (m_penParticles  -> GetFlags  () & ENF_DELETED )){
#line 950 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsOfClass  (m_penParticles  , "Projectile")){
#line 951 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fParticlesTimeElapsed  = _pTimer  -> GetLerpedCurrentTick  () - ((CProjectile  &) * m_penParticles ) . m_fStartTime ;
#line 952 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_ShooterFlame  (GetLerpedPlacement  () , m_penParticles  -> GetLerpedPlacement  () , 
#line 953 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fTimeElapsed  , fParticlesTimeElapsed );
#line 954 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else if(IsOfClass  (m_penParticles  , "Shooter")){
#line 955 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_ShooterFlame  (GetLerpedPlacement  () , 
#line 956 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
((CShooter  &) * m_penParticles ) . GetPlacement  () , 
#line 957 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fTimeElapsed  , 0.0f);
#line 958 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 959 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 960 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 961 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 962 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_METEOR : 
#line 963 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_MeteorTrail  (this  , m_fStretch  , 1.0f , en_vCurrentTranslationAbsolute );
#line 964 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_AfterBurner  (this  , m_fStartTime  , m_fStretch  * 4.0f , 2);
#line 965 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 966 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_AFTERBURNER_DEBRIS : 
#line 967 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_AfterBurner  (this  , m_fStartTime  , m_fStretch );
#line 968 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 969 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_AIRELEMENTAL_WIND : 
#line 970 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_Windblast  (this  , m_fStretch  / 4.0f , m_fStartTime  + 3.0f);
#line 971 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 972 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 973 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 981 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerRocket(void) {
#line 983 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 984 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 985 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 986 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ROCKET );
#line 987 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ROCKET );
#line 989 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 990 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 992 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 993 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 994 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 30.0f;
#line 995 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetSP  () -> sp_bCooperative )
#line 996 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 997 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 100.0f;
#line 998 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 50.0f;
#line 999 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1000 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
else 
#line 1001 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1002 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 75.0f;
#line 1003 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 75.0f;
#line 1004 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1005 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 4.0f;
#line 1006 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 8.0f;
#line 1007 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 50.0f;
#line 1008 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 1009 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1010 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 1011 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1012 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 1.125f;
#line 1013 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 1014 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 1015 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 1016 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1017 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1019 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::WalkerRocket(void) {
#line 1021 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1022 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1023 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1024 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ROCKET );
#line 1025 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ROCKET );
#line 1027 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1028 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1030 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 1031 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 1032 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 30.0f;
#line 1033 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetSP  () -> sp_gdGameDifficulty  <= CSessionProperties  :: GD_EASY ){
#line 1034 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 40.0f;
#line 1035 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 20.0f;
#line 1036 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 1037 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 100.0f;
#line 1038 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 50.0f;
#line 1039 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1040 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 4.0f;
#line 1041 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 8.0f;
#line 1042 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 50.0f;
#line 1043 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 1044 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1045 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 1046 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1047 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 1.125f;
#line 1048 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 1049 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 1050 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 1051 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1052 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1054 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::WalkerRocketExplosion(void) {
#line 1055 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlayerRocketExplosion  ();
#line 1056 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1058 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerRocketExplosion(void) {
#line 1059 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1060 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1061 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1062 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1065 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1066 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_ROCKET ;
#line 1067 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1 , 1 , 1);
#line 1068 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1070 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Player")){
#line 1071 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnRangeSound  (m_penLauncher  , this  , SNDT_PLAYER  , m_fSoundRange );
#line 1072 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1075 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSION_DEBRIS ;
#line 1076 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1079 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSION_SMOKE ;
#line 1080 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1083 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1084 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 1086 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 1087 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1088 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1090 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 1091 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1092 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1094 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_ROCKET_PLANE ;
#line 1095 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1096 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 1097 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1098 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1099 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1102 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerGrenade(void) {
#line 1104 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1105 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 1106 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1107 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_GRENADE );
#line 1108 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_GRENADE );
#line 1110 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 5.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 1111 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 120.0f + 120.0f , FRnd  () * 250.0f - 125.0f));
#line 1112 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
en_fBounceDampNormal  = 0.75f;
#line 1113 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
en_fBounceDampParallel  = 0.6f;
#line 1114 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
en_fJumpControlMultiplier  = 0.0f;
#line 1115 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
en_fCollisionSpeedLimit  = 45.0f;
#line 1116 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
en_fCollisionDamageFactor  = 10.0f;
#line 1117 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 3.0f;
#line 1118 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 75.0f;
#line 1119 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 100.0f;
#line 1120 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 4.0f;
#line 1121 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 8.0f;
#line 1122 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 50.0f;
#line 1123 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 1124 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
en_fDeceleration  = 25.0f;
#line 1125 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1126 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 1127 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1128 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1129 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (20.0f);
#line 1130 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_SLIDING ;
#line 1131 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 1132 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 1133 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1135 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerGrenadeExplosion(void) {
#line 1136 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1137 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1138 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1139 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1142 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1143 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE ;
#line 1144 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1 , 1 , 1);
#line 1145 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1147 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Player")){
#line 1148 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnRangeSound  (m_penLauncher  , this  , SNDT_PLAYER  , m_fSoundRange );
#line 1149 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1152 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1153 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 1155 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 1156 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1157 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1159 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 1160 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1161 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1163 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE_PLANE ;
#line 1164 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1165 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 1166 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1167 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1168 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1170 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerAltGrenade(void) {
#line 1172 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1173 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 1174 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1175 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ALT_GRENADE );
#line 1176 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ALT_GRENADE );
#line 1179 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 1180 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 360.0f - 180.0f , FRnd  () * 360.0f - 180.0f));
#line 1181 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 1182 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 1183 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 30.0f;
#line 1184 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 75.0f;
#line 1185 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 100.0f;
#line 1186 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 4.0f;
#line 1187 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 8.0f;
#line 1188 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 45.0f;
#line 1189 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 1190 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1191 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 1192 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1193 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.5f;
#line 1194 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 1195 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1196 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1198 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerAltGrenadeExplosion(void) {
#line 1199 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1200 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1201 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1202 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1205 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1206 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE ;
#line 1207 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1 , 1 , 1);
#line 1208 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1210 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Player")){
#line 1211 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnRangeSound  (m_penLauncher  , this  , SNDT_PLAYER  , m_fSoundRange );
#line 1212 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1215 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1216 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 1218 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 1219 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1220 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1222 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 1223 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1224 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1226 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE_PLANE ;
#line 1227 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1228 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 1229 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1230 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1231 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1238 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerFlame(void) {
#line 1240 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsEditorModel  ();
#line 1241 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_SLIDING  & ~ EPF_TRANSLATEDBYGRAVITY  & ~ EPF_ORIENTEDBYGRAVITY );
#line 1243 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1244 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1245 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_FLAME );
#line 1250 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CMovableEntity  * penPlayer  = (CMovableEntity  *) (CEntity  *) m_penLauncher ;
#line 1251 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirection  = penPlayer  -> en_vCurrentTranslationAbsolute ;
#line 1252 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 1253 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedFwd  = ClampDn  (vDirection  % vFront  , 0.0f);
#line 1255 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - (25.0f + fSpeedFwd )) , penPlayer );
#line 1256 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1257 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 1.0f;
#line 1258 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = (GetSP  () -> sp_bCooperative ) ? 10.0f : 4.0f;
#line 1259 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1260 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1261 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1262 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1263 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1264 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.3f;
#line 1265 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 1266 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_SLIDING ;
#line 1267 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1274 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerLaserRay(void) {
#line 1276 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1277 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1278 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1279 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1280 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_LASER );
#line 1281 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CModelObject * pmo  = GetModelObject  ();
#line 1282 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(pmo  != NULL )
#line 1283 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1284 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pmo  -> PlayAnim  (LASERPROJECTILE_ANIM_GROW  , 0);
#line 1285 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1286 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_GREEN_LASER );
#line 1288 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 120.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1289 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1290 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 3.0f;
#line 1291 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 1292 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1293 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1294 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1295 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1296 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1297 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1298 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 1300 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.025f;
#line 1301 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1302 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1304 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerLaserWave(void) {
#line 1305 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1306 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1307 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1308 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1311 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1312 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 1314 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_dRED  | CT_OPAQUE ;
#line 1315 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LASERWAVE ;
#line 1316 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1317 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1318 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1319 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1320 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1323 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerLaserBlueRay(void) {
#line 1325 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1326 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1327 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1328 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1329 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_LASER_BLUE );
#line 1330 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CModelObject * pmo  = GetModelObject  ();
#line 1335 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_LASER_BLUE );
#line 1337 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 240) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1338 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1339 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1340 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 450.0f;
#line 1343 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Enemy Base")){
#line 1349 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1351 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1352 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1353 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1354 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1355 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1356 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 2.5f;
#line 1357 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.5f;
#line 1359 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 1.0f;
#line 1360 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1361 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1363 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::PlayerLaserBlueWave(void) {
#line 1364 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1365 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1366 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1367 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1370 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1371 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 1373 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_dRED  | CT_OPAQUE ;
#line 1374 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LASERBLUE ;
#line 1375 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1376 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1377 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1378 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1379 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1386 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::CatmanProjectile(void) {
#line 1388 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1389 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1390 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1391 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1392 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_CATMAN_FIRE );
#line 1393 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_CATMAN_FIRE );
#line 1395 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 15.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1396 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1397 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1398 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 1399 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1400 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1401 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1402 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1403 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1404 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1405 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1406 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1413 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::HeadmanFirecracker(void) {
#line 1415 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1416 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_SLIDING );
#line 1417 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1418 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1419 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_HEADMAN_FIRECRACKER );
#line 1420 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_HEADMAN_FIRECRACKER );
#line 1421 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.75f , 0.75f , 0.75f));
#line 1422 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1424 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 25.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1425 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , FRnd  () * 20.0f - 10.0f));
#line 1426 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1427 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 4.0f;
#line 1428 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1429 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1430 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1431 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1432 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1433 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1434 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_SLIDING ;
#line 1435 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1437 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::HeadmanRocketman(void) {
#line 1439 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1440 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1441 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1442 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1443 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetComponents  (this  , * GetModelObject  () , MODEL_HEADMAN_BLADE  , TEXTURE_HEADMAN_BLADE  , 
#line 1444 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
TEX_REFL_LIGHTBLUEMETAL01  , TEX_SPEC_MEDIUM  , 0);
#line 1445 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , BLADE_ATTACHMENT_FLAME01  , 
#line 1446 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
MODEL_HEADMAN_BLADE_FLAME  , TEXTURE_HEADMAN_BLADE_FLAME  , 0 , 0 , 0);
#line 1447 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , BLADE_ATTACHMENT_FLAME02  , 
#line 1448 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
MODEL_HEADMAN_BLADE_FLAME  , TEXTURE_HEADMAN_BLADE_FLAME  , 0 , 0 , 0);
#line 1449 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , BLADE_ATTACHMENT_FLAME03  , 
#line 1450 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
MODEL_HEADMAN_BLADE_FLAME  , TEXTURE_HEADMAN_BLADE_FLAME  , 0 , 0 , 0);
#line 1451 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.5f , 0.5f , 0.5f));
#line 1452 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1454 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1455 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1456 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1457 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 1458 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1459 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1460 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1461 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1462 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1463 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1464 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1465 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1467 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::HeadmanBomberman(void) {
#line 1469 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1470 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 1471 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1472 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_HEADMAN_BOMB );
#line 1473 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_HEADMAN_BOMB );
#line 1476 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 1477 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 360.0f - 180.0f , FRnd  () * 360.0f - 180.0f));
#line 1478 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 2.5f;
#line 1479 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 1480 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 15.0f;
#line 1481 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 1.0f;
#line 1482 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 6.0f;
#line 1483 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 25.0f;
#line 1484 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 1485 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1486 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 1487 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1488 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1489 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 1490 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1491 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1493 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::HeadmanBombermanExplosion(void) {
#line 1494 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1495 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1496 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1497 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1500 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1501 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_BOMB ;
#line 1502 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1.0f , 1.0f , 1.0f);
#line 1503 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1505 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1506 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 1508 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 1509 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1510 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1511 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE_PLANE ;
#line 1512 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1513 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 1514 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1515 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1516 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1518 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::CyborgBombExplosion(void) 
#line 1519 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1520 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1521 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1522 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1523 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1526 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1527 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_BOMB ;
#line 1528 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1.0f , 1.0f , 1.0f);
#line 1529 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1531 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 1532 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 1534 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 1535 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1536 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1537 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE_PLANE ;
#line 1538 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1539 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 1540 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1541 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1542 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1547 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::BonemanProjectile(void) {
#line 1549 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1550 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1551 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1552 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1553 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BONEMAN_FIRE );
#line 1554 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BONEMAN_FIRE );
#line 1556 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1557 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1558 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1559 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 1560 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1561 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1562 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1563 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1564 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1565 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1566 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_SLIDING ;
#line 1567 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1574 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::WomanProjectile(void) {
#line 1576 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1577 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1578 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1579 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1580 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_WOMAN_FIRE );
#line 1581 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_WOMAN_FIRE );
#line 1583 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1584 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1585 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1586 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 8.0f;
#line 1587 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1588 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1589 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1590 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1591 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1592 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1593 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1594 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1601 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::DragonmanProjectile(INDEX iType) {
#line 1603 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1604 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_ONBLOCK_SLIDE  | EPF_PUSHABLE  | EPF_MOVABLE );
#line 1605 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1606 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1607 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_DRAGONMAN_FIRE );
#line 1608 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(iType  == DRAGONMAN_STRONG ){
#line 1609 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_DRAGONMAN_FIRE2 );
#line 1610 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 1611 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_DRAGONMAN_FIRE1 );
#line 1612 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1614 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(iType  == DRAGONMAN_STRONG ){
#line 1615 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 40.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1616 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 14.0f;
#line 1617 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 1618 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1619 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 7.0f;
#line 1620 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1621 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1622 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1623 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1624 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1625 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1626 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1627 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1628 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1629 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1630 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1637 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::ElementalRock(INDEX iSize,INDEX iType) {
#line 1639 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1640 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_ONBLOCK_SLIDE  | EPF_PUSHABLE  | EPF_MOVABLE );
#line 1641 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1642 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
switch(iType ){
#line 1643 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case ELEMENTAL_STONEMAN : 
#line 1644 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ELEM_STONE );
#line 1645 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ELEM_STONE );
#line 1646 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 1647 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case ELEMENTAL_LAVAMAN : 
#line 1648 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ELEM_LAVA_STONE );
#line 1649 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ELEM_LAVA_STONE );
#line 1650 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , LAVASTONE_ATTACHMENT_FLARE  , 
#line 1651 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
MODEL_ELEM_LAVA_STONE_FLARE  , TEXTURE_ELEM_LAVA_STONE_FLARE  , 0 , 0 , 0);
#line 1652 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 1653 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case ELEMENTAL_ICEMAN : 
#line 1654 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ELEM_ICE );
#line 1655 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ELEM_ICE );
#line 1658 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 1659 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1660 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(iSize  == ELEMENTAL_LARGE ){
#line 1661 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (2.25f , 2.25f , 2.25f));
#line 1662 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else if(iSize  == ELEMENTAL_BIG ){
#line 1663 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.75f , 0.75f , 0.75f));
#line 1664 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 1665 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.4f , 0.4f , 0.4f));
#line 1666 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1667 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1669 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(iSize  == ELEMENTAL_LARGE ){
#line 1670 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 80.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1671 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 1672 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (40.0f);
#line 1673 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else if(iSize  == ELEMENTAL_BIG ){
#line 1674 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 50.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1675 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 12.5f;
#line 1676 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (20.0f);
#line 1677 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 1678 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1679 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 7.0f;
#line 1680 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (10.0f);
#line 1681 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1682 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , FRnd  () * 1800.0f - 900.0f));
#line 1683 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
en_fCollisionSpeedLimit  = 1000.0f;
#line 1684 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
en_fCollisionDamageFactor  = 0.0f;
#line 1685 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1686 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1687 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1688 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1689 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1690 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1691 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1692 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_SLIDING ;
#line 1693 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1695 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::LavaManBomb(void) 
#line 1696 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1698 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1699 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 1700 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1702 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ELEM_LAVA_BOMB );
#line 1703 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ELEM_LAVA_BOMB );
#line 1704 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , LAVABOMB_ATTACHMENT_FLARE  , 
#line 1705 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
MODEL_ELEM_LAVA_BOMB_FLARE  , TEXTURE_ELEM_LAVA_BOMB_FLARE  , 0 , 0 , 0);
#line 1707 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_LAVAMAN_BIG_BOMB )
#line 1708 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1709 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (6.0f , 6.0f , 6.0f));
#line 1710 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 1711 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 10.0f;
#line 1712 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 7.5f;
#line 1713 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 15.0f;
#line 1714 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (30.0f);
#line 1715 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1716 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
else if(m_prtType  == PRT_LAVAMAN_BOMB )
#line 1717 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1718 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (1.5f , 1.5f , 1.5f));
#line 1719 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 1720 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 5.0f;
#line 1721 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 5.0f;
#line 1722 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 10.0f;
#line 1723 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (10.0f);
#line 1724 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1725 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1728 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 1729 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 360.0f - 180.0f , 0.0f));
#line 1730 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 20.0f;
#line 1731 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 50.0f;
#line 1732 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 1733 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1734 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1735 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1736 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1737 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 4.0f;
#line 1740 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_LAVAMAN_BIG_BOMB )
#line 1741 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1743 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 1744 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1745 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 1746 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1747 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1748 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 4.0f;
#line 1749 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 1750 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 1751 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = FLOAT3D (0 , - 0.5f , 0);
#line 1752 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 1753 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 1754 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1755 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1757 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::LavamanBombExplosion(void) 
#line 1758 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1759 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1760 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1761 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1762 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1764 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge ))
#line 1765 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1766 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f)
#line 1767 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1769 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1770 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 1771 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1772 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1773 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1774 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1777 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1778 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 1779 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (4 , 4 , 4);
#line 1780 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1783 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 1784 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1785 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 1786 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1787 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1788 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 4.0f;
#line 1789 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 1790 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 1791 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 32.0f;
#line 1792 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 1793 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 1796 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
for(INDEX iDebris  = 0;iDebris  < 3 + IRnd  () % 3;iDebris  ++)
#line 1797 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1798 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fHeading  = (FRnd  () - 0.5f) * 180.0f;
#line 1799 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fPitch  = 10.0f + FRnd  () * 40.0f;
#line 1800 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeed  = 10.0 + FRnd  () * 50.0f;
#line 1803 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D pl  = GetPlacement  ();
#line 1804 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pl  . pl_PositionVector  (2) += 2.0f;
#line 1805 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  = m_penLauncher  -> GetPlacement  () . pl_OrientationAngle ;
#line 1806 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (1) += AngleDeg  (fHeading );
#line 1807 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (2) = AngleDeg  (fPitch );
#line 1809 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penProjectile  = CreateEntity  (pl  , CLASS_PROJECTILE );
#line 1810 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ELaunchProjectile  eLaunch ;
#line 1811 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eLaunch  . penLauncher  = this ;
#line 1812 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eLaunch  . prtType  = PRT_LAVAMAN_BOMB ;
#line 1813 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eLaunch  . fSpeed  = fSpeed ;
#line 1814 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penProjectile  -> Initialize  (eLaunch );
#line 1817 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = pl ;
#line 1818 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1819 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (penProjectile );
#line 1820 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1821 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1822 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 1823 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 1824 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 1825 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = FLOAT3D (0 , - 0.5f , 0);
#line 1826 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = penProjectile ;
#line 1827 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 1828 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1829 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1831 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::LavamanBombDebrisExplosion(void) 
#line 1832 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1833 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 1834 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 1835 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 1836 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 1839 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge ))
#line 1840 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1841 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f)
#line 1842 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1843 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1844 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 1845 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1846 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 1847 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1848 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1851 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1852 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 1853 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 1854 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 1857 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 1858 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 1859 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 1860 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 1861 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1862 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 4.0f;
#line 1863 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 1864 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 1865 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 16.0f;
#line 1866 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 1867 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 1868 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1873 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::HuanmanProjectile(void) {
#line 1875 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1876 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 1877 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 1878 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 1879 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetComponents  (this  , * GetModelObject  () , MODEL_HUANMAN_FIRE  , TEXTURE_HUANMAN_FIRE  , 
#line 1880 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
TEX_REFL_LIGHTMETAL01  , TEX_SPEC_STRONG  , 0);
#line 1881 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , PROJECTILE_ATTACHMENT_FLARE  , 
#line 1882 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
MODEL_HUANMAN_FLARE  , TEXTURE_HUANMAN_FLARE  , 0 , 0 , 0);
#line 1883 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.5f , 0.5f , 0.5f));
#line 1884 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1886 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1887 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1888 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 1889 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 1890 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1891 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1892 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 1893 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1894 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1895 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1896 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1897 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1902 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastProjectile(void) {
#line 1904 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Enemy Base")){
#line 1905 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penTarget  = ((CEnemyBase  *) & * m_penLauncher ) -> m_penEnemy ;
#line 1906 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1908 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1909 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FREE_FLYING );
#line 1910 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1912 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BEAST_FIRE );
#line 1913 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BEAST_FIRE );
#line 1914 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (1.5f , 1.5f , 1.5f));
#line 1916 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1918 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 1919 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_BEAST_FLYING  , SOF_3D  | SOF_LOOP );
#line 1921 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 60.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1922 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1923 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 1924 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 1925 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1926 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1927 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1928 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1929 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1930 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1931 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_GUIDED ;
#line 1932 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fGuidedMaxSpeedFactor  = 30.0f;
#line 1933 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 175.0f;
#line 1934 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (10.0f);
#line 1935 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1937 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastBigProjectile(void) {
#line 1939 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Enemy Base")){
#line 1940 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penTarget  = ((CEnemyBase  *) & * m_penLauncher ) -> m_penEnemy ;
#line 1941 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 1943 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1944 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FREE_FLYING );
#line 1945 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1947 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BEAST_FIRE );
#line 1948 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BEAST_BIG_FIRE );
#line 1949 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (2.5f , 2.5f , 2.5f));
#line 1951 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1953 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (50.0f , 2.0f , 1.0f , 0.75f);
#line 1954 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_BEAST_FLYING  , SOF_3D  | SOF_LOOP );
#line 1956 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 60.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 1957 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1958 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 1959 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 1960 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1961 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1962 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1963 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1964 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 1965 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1966 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_GUIDED_FAST ;
#line 1967 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fGuidedMaxSpeedFactor  = 90.0f;
#line 1968 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (10000.0f);
#line 1969 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 100.0f;
#line 1970 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 1972 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastDebris(void) 
#line 1973 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 1975 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 1976 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 1977 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 1979 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BEAST_FIRE );
#line 1980 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.75f , 0.75f , 0.75f));
#line 1981 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BEAST_FIRE );
#line 1982 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StartAnim  (1 + (ULONG ) FRnd  () * 5.0f);
#line 1984 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 1986 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - 20.0f) , (CMovableEntity  *) & * m_penLauncher );
#line 1987 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 1988 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 1989 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 0.0f;
#line 1990 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 1991 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 1992 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 1993 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 1994 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 1995 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 1996 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 1997 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (1.0f);
#line 1998 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 100.0f;
#line 1999 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2001 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastBigDebris(void) 
#line 2002 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2004 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2005 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 2006 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2008 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BEAST_FIRE );
#line 2009 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BEAST_BIG_FIRE );
#line 2010 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (1.0f , 1.0f , 1.0f));
#line 2011 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StartAnim  (1 + (ULONG ) FRnd  () * 5.0f);
#line 2013 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2015 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - 20.0f) , (CMovableEntity  *) & * m_penLauncher );
#line 2016 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2017 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 2018 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 0.0f;
#line 2019 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2020 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2021 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2022 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2023 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2024 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2025 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2026 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (1.0f);
#line 2027 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 100.0f;
#line 2028 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2030 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastDebrisExplosion(void) 
#line 2031 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2033 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2034 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_GREEN  | CT_OPAQUE ;
#line 2035 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 2036 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (0.75 , 0.75 , 0.75);
#line 2037 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2040 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2041 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2042 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2043 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2044 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2045 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 2046 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.75f;
#line 2047 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_BEAST_PROJECTILE_SPRAY ;
#line 2048 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 64.0f;
#line 2049 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2050 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2051 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2053 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastBigDebrisExplosion(void) 
#line 2054 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2056 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2057 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2058 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 2059 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1 , 1 , 1);
#line 2060 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2063 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2064 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2065 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2066 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2067 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2068 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 2069 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 1.0f;
#line 2070 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2071 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 64.0f;
#line 2072 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2073 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2074 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2076 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastProjectileExplosion(void) 
#line 2077 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2079 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2080 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_GREEN  | CT_OPAQUE ;
#line 2081 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 2082 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (1.25 , 1.25 , 1.25);
#line 2083 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2086 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2087 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2088 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2089 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2090 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2091 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 2092 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 1.0f;
#line 2093 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_BEAST_PROJECTILE_SPRAY ;
#line 2094 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 64.0f;
#line 2095 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2096 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2098 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fHeading  = 20.0f + (FRnd  () - 0.5f) * 60.0f;
#line 2100 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
for(INDEX iDebris  = 0;iDebris  < 2;iDebris  ++)
#line 2101 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2102 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fPitch  = 10.0f + FRnd  () * 10.0f;
#line 2103 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeed  = 5.0 + FRnd  () * 20.0f;
#line 2106 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D pl  = GetPlacement  ();
#line 2107 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (1) += AngleDeg  (fHeading );
#line 2109 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fHeading  = - fHeading ;
#line 2110 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (2) = AngleDeg  (fPitch );
#line 2112 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penProjectile  = CreateEntity  (pl  , CLASS_PROJECTILE );
#line 2113 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ELaunchProjectile  eLaunch ;
#line 2114 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eLaunch  . penLauncher  = this ;
#line 2115 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eLaunch  . prtType  = PRT_BEAST_DEBRIS ;
#line 2116 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eLaunch  . fSpeed  = fSpeed ;
#line 2117 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penProjectile  -> Initialize  (eLaunch );
#line 2120 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = pl ;
#line 2121 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2122 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (penProjectile );
#line 2123 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2124 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2125 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 0.5f;
#line 2126 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.25f;
#line 2127 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_BEAST_PROJECTILE_SPRAY ;
#line 2128 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = FLOAT3D (0 , - 0.5f , 0);
#line 2129 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = penProjectile ;
#line 2130 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2131 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2132 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2134 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::BeastBigProjectileExplosion(void) 
#line 2135 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2137 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2138 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2139 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 2140 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2141 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2144 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2145 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2146 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2147 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2148 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2149 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 4.0f;
#line 2150 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 2151 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2152 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 32.0f;
#line 2153 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2154 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2157 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
for(INDEX iDebris  = 0;iDebris  < 3 + IRnd  () % 2;iDebris  ++)
#line 2158 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2159 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fHeading  = (FRnd  () - 0.5f) * 180.0f;
#line 2160 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fPitch  = 10.0f + FRnd  () * 40.0f;
#line 2161 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeed  = 10.0 + FRnd  () * 50.0f;
#line 2164 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D pl  = GetPlacement  ();
#line 2165 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (1) += AngleDeg  (fHeading );
#line 2166 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (2) += AngleDeg  (fPitch );
#line 2168 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penProjectile  = CreateEntity  (pl  , CLASS_PROJECTILE );
#line 2169 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ELaunchProjectile  eLaunch ;
#line 2170 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eLaunch  . penLauncher  = this ;
#line 2171 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eLaunch  . prtType  = PRT_BEAST_BIG_DEBRIS ;
#line 2172 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eLaunch  . fSpeed  = fSpeed ;
#line 2173 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penProjectile  -> Initialize  (eLaunch );
#line 2176 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = pl ;
#line 2177 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2178 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (penProjectile );
#line 2179 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2180 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2181 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 2182 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 2183 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2184 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = FLOAT3D (0 , - 0.5f , 0);
#line 2185 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = penProjectile ;
#line 2186 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2187 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2188 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2193 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::FishmanProjectile(void) {
#line 2195 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2196 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2197 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2198 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2199 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetComponents  (this  , * GetModelObject  () , MODEL_FISHMAN_FIRE  , TEXTURE_FISHMAN_FIRE  , 0 , 0 , 0);
#line 2200 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2202 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2203 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2204 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 2205 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 2206 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2207 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2208 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2209 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2210 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2211 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2212 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2213 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2220 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::MantamanProjectile(void) {
#line 2222 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2223 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2224 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2225 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2226 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetComponents  (this  , * GetModelObject  () , MODEL_MANTAMAN_FIRE  , TEXTURE_MANTAMAN_FIRE  , 0 , 0 , 0);
#line 2227 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2229 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 35.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2230 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2231 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 2232 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 7.0f;
#line 2233 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2234 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2235 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2236 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2237 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2238 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2239 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2240 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2246 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::DevilLaser(void) {
#line 2248 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2249 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2250 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2251 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2252 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetComponents  (this  , * GetModelObject  () , MODEL_CYBORG_LASER  , TEXTURE_CYBORG_LASER  , 0 , 0 , 0);
#line 2253 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (4.0f , 4.0f , 2.0f));
#line 2254 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2256 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - DEVIL_LASER_SPEED ) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2257 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2258 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 2259 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2260 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2261 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2262 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2263 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2264 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2265 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2266 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2267 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2269 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::DevilRocket(void) {
#line 2271 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2272 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2273 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2274 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ROCKET );
#line 2275 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ROCKET );
#line 2276 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (12.0f , 12.0f , 8.0f));
#line 2277 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2279 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - DEVIL_ROCKET_SPEED ) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2280 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2282 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (100.0f , 2.0f , 1.0f , 1.0f);
#line 2283 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 2284 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 50.0f;
#line 2285 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 50.0f;
#line 2286 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 50.0f;
#line 2287 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 2.0f;
#line 2288 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 10.0f;
#line 2289 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 100.0f;
#line 2290 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2291 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2292 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 2293 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2294 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 1.125f;
#line 2295 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 10000.0f;
#line 2296 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 2297 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (25.0f);
#line 2298 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2299 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2301 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::DevilRocketExplosion(void) {
#line 2302 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2303 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 2304 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 2305 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 2308 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2309 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE ;
#line 2310 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2311 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2313 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Player")){
#line 2314 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnRangeSound  (m_penLauncher  , this  , SNDT_PLAYER  , m_fSoundRange );
#line 2315 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2318 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 2319 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 2321 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 2322 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2323 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2324 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 2326 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 2327 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2328 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2329 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 2331 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_GRENADE_PLANE ;
#line 2332 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2333 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2334 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 2335 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2336 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2337 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2339 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::DevilGuidedProjectile(void) {
#line 2341 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Enemy Base")){
#line 2342 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penTarget  = ((CEnemyBase  *) & * m_penLauncher ) -> m_penEnemy ;
#line 2343 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2345 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2346 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FREE_FLYING );
#line 2347 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2349 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BEAST_FIRE );
#line 2350 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BEAST_BIG_FIRE );
#line 2351 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (2.5f , 2.5f , 2.5f));
#line 2352 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2354 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (250.0f , 2.0f , 1.0f , 0.75f);
#line 2355 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 2357 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 80.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2358 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2359 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 20.0f;
#line 2360 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 2361 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2362 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2363 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2364 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2365 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2366 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2367 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_GUIDED ;
#line 2368 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fGuidedMaxSpeedFactor  = 30.0f;
#line 2369 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (30.0f);
#line 2370 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 100.0f;
#line 2371 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2373 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::DevilGuidedProjectileExplosion(void) 
#line 2374 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2376 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2377 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2378 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 2379 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (4 , 4 , 4);
#line 2380 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2383 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2384 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2385 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2386 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2387 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2388 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 8.0f;
#line 2389 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 1.0f;
#line 2390 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2391 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 32.0f;
#line 2392 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2393 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2396 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
for(INDEX iDebris  = 0;iDebris  < 3 + IRnd  () % 2;iDebris  ++)
#line 2397 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2398 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fHeading  = (FRnd  () - 0.5f) * 180.0f;
#line 2399 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fPitch  = 10.0f + FRnd  () * 40.0f;
#line 2400 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeed  = 10.0 + FRnd  () * 50.0f;
#line 2403 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D pl  = GetPlacement  ();
#line 2404 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (1) += AngleDeg  (fHeading );
#line 2405 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pl  . pl_OrientationAngle  (2) += AngleDeg  (fPitch );
#line 2407 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penProjectile  = CreateEntity  (pl  , CLASS_PROJECTILE );
#line 2408 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ELaunchProjectile  eLaunch ;
#line 2409 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eLaunch  . penLauncher  = this ;
#line 2410 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eLaunch  . prtType  = PRT_BEAST_BIG_DEBRIS ;
#line 2411 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eLaunch  . fSpeed  = fSpeed ;
#line 2412 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penProjectile  -> Initialize  (eLaunch );
#line 2415 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = pl ;
#line 2416 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2417 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (penProjectile );
#line 2418 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2419 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2420 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 2421 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 1.0f;
#line 2422 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2423 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = FLOAT3D (0 , - 0.5f , 0);
#line 2424 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = penProjectile ;
#line 2425 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2426 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2427 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2432 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::CyborgLaser(void) {
#line 2434 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2435 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2436 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2437 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2438 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetComponents  (this  , * GetModelObject  () , MODEL_CYBORG_LASER  , TEXTURE_CYBORG_LASER  , 0 , 0 , 0);
#line 2439 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2441 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 60.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2442 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2443 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 4.0f;
#line 2444 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 2445 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2446 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2447 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2448 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2449 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2450 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2451 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2452 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2454 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::CyborgBomb(void) 
#line 2455 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2457 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2458 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_BOUNCING );
#line 2459 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2460 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_CYBORG_BOMB );
#line 2461 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_CYBORG_BOMB );
#line 2462 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2464 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 2465 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2466 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 2.5f;
#line 2467 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2468 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 15.0f;
#line 2469 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 1.0f;
#line 2470 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 6.0f;
#line 2471 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 25.0f;
#line 2472 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2473 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2474 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 2475 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2476 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2477 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 2478 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2479 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2486 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::LavaBall(void) {
#line 2488 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2489 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FALL );
#line 2490 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2491 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_LAVA );
#line 2492 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_LAVA );
#line 2493 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
AddAttachment  (0 , MODEL_LAVA_FLARE  , TEXTURE_LAVA_FLARE );
#line 2496 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 2497 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 360.0f - 180.0f , FRnd  () * 360.0f - 180.0f));
#line 2498 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 2499 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 2500 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 5.0f;
#line 2501 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 1.0f;
#line 2502 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 4.0f;
#line 2503 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2504 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2505 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2506 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2507 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2508 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2509 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2510 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2512 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::LavaBallExplosion(void) {
#line 2513 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2514 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 2515 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 2516 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 2517 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 2518 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 2520 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2521 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 2522 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2523 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 2524 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2525 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2526 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2532 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::GruntSoldierLaser(void) {
#line 2534 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2535 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2536 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2537 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2538 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_GRUNT_PROJECTILE );
#line 2539 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CModelObject * pmo  = GetModelObject  ();
#line 2540 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(pmo  != NULL )
#line 2541 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2542 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pmo  -> PlayAnim  (GRUNTPROJECTILE_ANIM_DEFAULT  , 0);
#line 2543 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2544 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_GRUNT_PROJECTILE_01 );
#line 2546 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 45.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2547 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2548 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 1.5f;
#line 2549 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2550 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2551 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2552 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2553 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2554 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2555 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2556 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2558 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.025f;
#line 2559 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2560 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2562 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::GruntCommanderLaser(void) {
#line 2564 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2565 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2566 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2567 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2568 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_GRUNT_PROJECTILE );
#line 2569 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CModelObject * pmo  = GetModelObject  ();
#line 2570 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(pmo  != NULL )
#line 2571 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2572 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pmo  -> PlayAnim  (GRUNTPROJECTILE_ANIM_DEFAULT  , 0);
#line 2573 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2574 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_GRUNT_PROJECTILE_02 );
#line 2576 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 55.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2577 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2578 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 1.5f;
#line 2579 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 15.0f;
#line 2580 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2581 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2582 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2583 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2584 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2585 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2586 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2588 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.025f;
#line 2589 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2590 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2597 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::GuffyProjectile(void) {
#line 2599 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2600 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2601 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2602 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_GUFFY_PROJECTILE );
#line 2603 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_GUFFY_PROJECTILE );
#line 2604 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (1.0f , 1.0f , 1.0f));
#line 2606 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CModelObject * pmo  = GetModelObject  ();
#line 2607 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(pmo  != NULL )
#line 2608 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2609 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
pmo  -> PlayAnim  (GUFFYPROJECTILE_ANIM_ROTATE01  , AOF_LOOPING );
#line 2610 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2613 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 50.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2614 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2616 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 2617 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 2618 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 30.0f;
#line 2619 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2620 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 10.0f;
#line 2621 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 4.0f;
#line 2622 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 8.0f;
#line 2623 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 50.0f;
#line 2624 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2625 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2626 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2627 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2628 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 1.125f;
#line 2629 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2630 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 2631 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (10000.0f);
#line 2632 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2633 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2635 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::GuffyProjectileExplosion(void) {
#line 2636 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlayerRocketExplosion  ();
#line 2637 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2644 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::DemonFireball(void) {
#line 2646 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Enemy Base")){
#line 2647 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penTarget  = ((CEnemyBase  *) & * m_penLauncher ) -> m_penEnemy ;
#line 2648 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2650 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2651 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FREE_FLYING );
#line 2652 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2654 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_DEMON_FIREBALL );
#line 2655 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_DEMON_FIREBALL );
#line 2656 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (2.5f , 2.5f , 2.5f));
#line 2658 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2660 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (50.0f , 2.0f , 1.0f , 0.75f);
#line 2661 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_BEAST_FLYING  , SOF_3D  | SOF_LOOP );
#line 2663 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 100.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2664 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2665 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 12.0f;
#line 2666 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 2667 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2668 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2669 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2670 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2671 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2672 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2673 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_GUIDED_FAST ;
#line 2674 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fGuidedMaxSpeedFactor  = 90.0f;
#line 2675 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (10000.0f);
#line 2676 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 200.0f;
#line 2677 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2679 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::DemonFireballExplosion(void) 
#line 2680 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2682 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2683 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2684 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 2685 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2686 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2689 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2690 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2691 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2692 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2693 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2694 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 4.0f;
#line 2695 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 2696 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2697 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 32.0f;
#line 2698 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2699 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2700 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2706 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::LarvaPlasma(void) {
#line 2708 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2709 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2710 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2711 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_LARVA_PLASMA_BALL );
#line 2712 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_LARVA_PLASMA_BALL );
#line 2713 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
AddAttachmentToModel  (this  , * GetModelObject  () , PLASMAGUN_ATTACHMENT_PROJECTILE  , 
#line 2714 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
MODEL_LARVA_PLASMA  , TEXTURE_LARVA_PLASMA  , 0 , 0 , 0);
#line 2716 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (2.5f , 2.5f , 2.5f));
#line 2717 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2720 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 60.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2721 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2723 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 2724 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 2725 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 30.0f;
#line 2726 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetSP  () -> sp_bCooperative )
#line 2727 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2728 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 30.0f;
#line 2729 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 30.0f;
#line 2730 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2731 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
else 
#line 2732 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 2733 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 25.0f;
#line 2734 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 25.0f;
#line 2735 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2736 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 4.0f;
#line 2737 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 8.0f;
#line 2738 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 50.0f;
#line 2739 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2740 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 2741 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2742 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2743 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.05f;
#line 2744 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2745 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 2746 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (100.0f);
#line 2747 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_iRebounds  = 4;
#line 2748 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING_REBOUNDING ;
#line 2749 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2751 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::LarvaPlasmaExplosion(void) {
#line 2753 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2754 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2755 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_LIGHT_CANNON ;
#line 2756 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (2 , 2 , 2);
#line 2757 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2760 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2761 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2762 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2763 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2764 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2765 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 2766 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.25f;
#line 2767 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_PLASMA ;
#line 2768 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = FLOAT3D (0.0f , 2.5f , 0.0f);
#line 2769 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2770 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2771 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2773 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::LarvaTail(void) {
#line 2776 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Enemy Base")){
#line 2777 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penTarget  = ((CEnemyBase  *) & * m_penLauncher ) -> m_penEnemy ;
#line 2778 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2780 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2781 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_SLIDING );
#line 2782 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2784 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_LARVA_TAIL );
#line 2785 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_LARVA_TAIL );
#line 2786 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (4.0f , 4.0f , 4.0f));
#line 2788 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2790 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (50.0f , 10.0f , 1.0f , 1.0f);
#line 2791 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_LARVETTE  , SOF_3D  | SOF_LOOP );
#line 2793 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2794 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2795 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 12.0f;
#line 2796 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2797 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2798 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2799 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2800 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2801 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2802 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2803 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_GUIDED_SLIDING ;
#line 2804 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 275.0f;
#line 2805 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (10.0f);
#line 2806 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2808 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::LarvaTailExplosion(void) {
#line 2809 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlayerRocketExplosion  ();
#line 2810 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2817 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::WindBlast(void) {
#line 2819 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsEditorModel  ();
#line 2820 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_SLIDING );
#line 2821 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2822 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2823 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_WINDBLAST );
#line 2824 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_WINDBLAST );
#line 2825 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (3.0f , 3.0f , 3.0f));
#line 2826 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2828 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 50.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2829 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2830 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 2831 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 20.0f;
#line 2832 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2833 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2834 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2835 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2836 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2837 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2838 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_SLIDING ;
#line 2839 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2845 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::Meteor() {
#line 2847 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2848 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2849 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2851 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_ELEM_LAVA_BOMB );
#line 2852 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_ELEM_LAVA_BOMB );
#line 2856 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (m_fStretch  , m_fStretch  , m_fStretch ));
#line 2857 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 2859 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_AfterBurner_Prepare  (this );
#line 2862 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2863 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2865 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (250.0f , 10.0f , 2.0f , 1.0f);
#line 2866 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_FLYING  , SOF_3D  | SOF_LOOP );
#line 2867 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 30.0f;
#line 2868 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 100.0f;
#line 2869 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 100.0f;
#line 2870 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 15.0f;
#line 2871 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 30.0f;
#line 2872 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 100.0f;
#line 2873 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2874 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2875 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = TRUE ;
#line 2876 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2877 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = GetSoundLength  (SOUND_METEOR_BLAST ) + 0.25f;
#line 2878 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2879 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 2880 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (100.0f);
#line 2881 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2882 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2884 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::MeteorExplosion() {
#line 2888 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2889 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2890 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2891 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2892 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2893 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 4.0f;
#line 2894 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 2895 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 2896 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = en_vCurrentTranslationAbsolute  / 32.0f;
#line 2897 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2898 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2900 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2901 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 2902 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 2903 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 2906 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2907 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_CANNON ;
#line 2908 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vStretch  = FLOAT3D (5 , 5 , 5);
#line 2909 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2911 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsDerivedFromClass  (m_penLauncher  , "Player")){
#line 2912 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnRangeSound  (m_penLauncher  , this  , SNDT_PLAYER  , m_fSoundRange );
#line 2913 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2916 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSION_DEBRIS ;
#line 2917 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2920 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSION_SMOKE ;
#line 2921 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (GetPlacement  () , ese );
#line 2924 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 2925 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 2927 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_EXPLOSIONSTAIN ;
#line 2928 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2929 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 2931 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 2932 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2933 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 2935 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . betType  = BET_ROCKET_PLANE ;
#line 2936 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2937 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  + ese  . vNormal  / 50.0f , ANGLE3D (0 , 0 , 0)) , ese );
#line 2938 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2939 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2940 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soExplosion  . Set3DParameters  (150.0f , 10.0f , 1.5f , 1.0f);
#line 2941 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soExplosion  , SOUND_METEOR_BLAST  , SOF_3D );
#line 2942 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2949 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::ShooterWoodenDart(void) {
#line 2951 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2952 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2953 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 2954 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_SHTR_WOODEN_DART );
#line 2955 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEX_SHTR_WOODEN_DART );
#line 2958 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 2959 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 2963 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 2964 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetSP  () -> sp_gdGameDifficulty  <= CSessionProperties  :: GD_EASY ){
#line 2965 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 2966 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 2967 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 10.0f;
#line 2968 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 2969 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 2970 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2971 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2972 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 2973 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 1.125f;
#line 2974 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 2975 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 2976 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 2977 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2978 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2980 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::ShooterWoodenDartExplosion() {
#line 2982 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 2983 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 2984 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 2985 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 2986 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 2987 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 0.5f;
#line 2988 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.1f;
#line 2989 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_WOOD ;
#line 2990 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = - en_vCurrentTranslationAbsolute  / 32.0f;
#line 2991 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 2992 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 2993 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 2995 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::ShooterFireball(void) {
#line 2997 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2998 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 2999 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 3000 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_BEAST_FIRE );
#line 3001 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_BEAST_BIG_FIRE );
#line 3002 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetModelObject  () -> StretchModel  (FLOAT3D (0.25f , 0.25f , 0.25f));
#line 3003 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ModelChangeNotify  ();
#line 3006 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 30.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 3007 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 3011 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 3012 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(GetSP  () -> sp_gdGameDifficulty  <= CSessionProperties  :: GD_EASY ){
#line 3013 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 7.5f;
#line 3014 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 3015 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 15.0f;
#line 3016 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3017 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 3018 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 3019 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 3020 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = TRUE ;
#line 3021 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.125f;
#line 3022 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0.1f;
#line 3023 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_tmInvisibility  = 0.05f;
#line 3024 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetHealth  (5.0f);
#line 3025 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 3026 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 3028 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::ShooterFireballExplosion() {
#line 3030 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CPlacement3D plSpray  = GetPlacement  ();
#line 3031 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 3032 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> SetParent  (this );
#line 3033 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESpawnSpray  eSpawnSpray ;
#line 3034 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 3035 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 3036 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . fSizeMultiplier  = 0.5f;
#line 3037 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . sptType  = SPT_LAVA_STONES ;
#line 3038 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . vDirection  = - en_vCurrentTranslationAbsolute  / 32.0f;
#line 3039 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSpawnSpray  . penOwner  = this ;
#line 3040 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penSpray  -> Initialize  (eSpawnSpray );
#line 3041 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 3043 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::ShooterFlame(void) {
#line 3045 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 3046 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_PROJECTILE_FLYING );
#line 3047 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_SOLID );
#line 3048 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 3049 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_FLAME );
#line 3051 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsPropelledProjectile  (FLOAT3D (0.0f , 0.0f , - 10.0f) , (CMovableEntity  *) (CEntity  *) m_penLauncher );
#line 3052 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 3053 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 1.0f;
#line 3054 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 3.0f;
#line 3055 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 3056 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = FALSE ;
#line 3057 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = TRUE ;
#line 3058 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 3059 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 3060 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.3f;
#line 3061 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 3062 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 3064 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::AfterburnerDebris(void) 
#line 3065 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3066 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_AfterBurner_Prepare  (this );
#line 3068 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InitAsEditorModel  ();
#line 3069 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FALL );
#line 3070 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 3071 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModel  (MODEL_MARKER );
#line 3072 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_MARKER );
#line 3074 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 3075 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 360.0f - 180.0f , FRnd  () * 360.0f - 180.0f));
#line 3076 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 3077 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageAmount  = 0.0f;
#line 3078 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 0.0f;
#line 3079 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 0.0f;
#line 3080 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 0.0f;
#line 3081 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 3082 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 3083 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 3084 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 3085 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 3086 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 2.0f;
#line 3087 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 3088 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 3096 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::ProjectileTouch(CEntityPointer penHit) 
#line 3097 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3099 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3102 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDirection ;
#line 3103 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fTransLen  = en_vIntendedTranslation  . Length  ();
#line 3104 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(fTransLen  > 0.5f)
#line 3105 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3106 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
vDirection  = en_vIntendedTranslation  / fTransLen ;
#line 3107 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3108 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
else 
#line 3109 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3110 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
vDirection  = - en_vGravityDir ;
#line 3111 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3114 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
const FLOAT fDamageMul  = GetSeriousDamageMultiplier  (m_penLauncher );
#line 3115 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if((m_prtType  == PRT_FLAME  || m_prtType  == PRT_SHOOTER_FLAME ) && m_fWaitAfterDeath  > 0.0f){
#line 3117 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_penLastDamaged  == penHit ){
#line 3118 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return ;
#line 3119 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 3120 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penLastDamaged  = penHit ;
#line 3121 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3124 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL bSpawnFlame  = TRUE ;
#line 3125 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL bInflictDamage  = TRUE ;
#line 3126 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(IsOfClass  (penHit  , "AirElemental"))
#line 3127 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3128 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bSpawnFlame  = FALSE ;
#line 3129 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3131 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
EntityInfo  * pei  = (EntityInfo  *) penHit  -> GetEntityInfo  ();
#line 3132 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(pei  != NULL  && pei  -> Eeibt  == EIBT_ICE )
#line 3133 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3134 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bSpawnFlame  = FALSE ;
#line 3135 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bInflictDamage  = FALSE ;
#line 3136 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3138 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bSpawnFlame )
#line 3139 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3140 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnFlame  (m_penLauncher  , penHit  , GetPlacement  () . pl_PositionVector );
#line 3141 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3142 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bInflictDamage )
#line 3143 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3144 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InflictDirectDamage  (penHit  , m_penLauncher  , DMT_BURNING  , m_fDamageAmount  * fDamageMul  , 
#line 3145 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetPlacement  () . pl_PositionVector  , vDirection );
#line 3146 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3149 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else if(m_prtType  == PRT_AIRELEMENTAL_WIND ){
#line 3150 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(penHit  == m_penLastDamaged ){
#line 3151 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return ;
#line 3152 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 3153 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penLastDamaged  = penHit ;
#line 3154 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3155 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InflictDirectDamage  (penHit  , m_penLauncher  , DMT_PROJECTILE  , m_fDamageAmount  * fDamageMul  , 
#line 3156 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetPlacement  () . pl_PositionVector  , vDirection );
#line 3159 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 3160 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InflictDirectDamage  (penHit  , m_penLauncher  , DMT_PROJECTILE  , m_fDamageAmount  * fDamageMul  , 
#line 3161 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetPlacement  () . pl_PositionVector  , vDirection );
#line 3162 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3163 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 3167 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::ProjectileHit(void) 
#line 3168 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3170 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_bExplode ){
#line 3171 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
const FLOAT fDamageMul  = GetSeriousDamageMultiplier  (m_penLauncher );
#line 3172 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
InflictRangeDamage  (m_penLauncher  , DMT_EXPLOSION  , m_fRangeDamageAmount  * fDamageMul  , 
#line 3173 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetPlacement  () . pl_PositionVector  , m_fDamageHotSpotRange  , m_fDamageFallOffRange );
#line 3174 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3176 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_fSoundRange  > 0.0f && IsDerivedFromClass  (m_penLauncher  , "Player"))
#line 3177 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3178 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ESound  eSound ;
#line 3179 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSound  . EsndtSound  = SNDT_EXPLOSION ;
#line 3180 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
eSound  . penTarget  = m_penLauncher ;
#line 3181 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SendEventInRange  (eSound  , FLOATaabbox3D (GetPlacement  () . pl_PositionVector  , m_fSoundRange ));
#line 3182 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3183 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 3187 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::SpawnEffect(const CPlacement3D & plEffect,const ESpawnEffect & eSpawnEffect) {
#line 3188 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntityPointer penEffect  = CreateEntity  (plEffect  , CLASS_BASIC_EFFECT );
#line 3189 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
penEffect  -> Initialize  (eSpawnEffect );
#line 3190 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 3197 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::BounceSound(void) {
#line 3198 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
switch(m_prtType ){
#line 3199 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GRENADE : 
#line 3200 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(en_vCurrentTranslationAbsolute  . Length  () > 3.0f){
#line 3201 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_soEffect  . Set3DParameters  (20.0f , 2.0f , 1.0f , 1.0f);
#line 3202 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
PlaySound  (m_soEffect  , SOUND_GRENADE_BOUNCE  , SOF_3D );
#line 3203 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3204 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 3205 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3206 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 3211 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE CProjectile::GetRotationSpeed(ANGLE aWantedAngle,ANGLE aRotateSpeed,FLOAT fWaitFrequency) 
#line 3212 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3213 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE aResult ;
#line 3215 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(aWantedAngle  < - aRotateSpeed  * fWaitFrequency )
#line 3216 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3218 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
aResult  = - aRotateSpeed ;
#line 3219 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3221 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
else if(aWantedAngle  > aRotateSpeed  * fWaitFrequency )
#line 3222 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3224 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
aResult  = + aRotateSpeed ;
#line 3225 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3227 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
else 
#line 3228 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3229 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
aResult  = aWantedAngle  / fWaitFrequency ;
#line 3230 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3231 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return aResult ;
#line 3232 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
  
#line 3236 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
void CProjectile::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 3237 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 3238 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3241 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_DEMON_FIREBALL  && dmtType  == DMT_CANNONBALL )
#line 3242 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3243 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fDamageAmmount  *= 10001.0f;
#line 3244 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3245 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_FLAME  && IsOfClass  (penInflictor  , "Moving Brush"))
#line 3246 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3247 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Destroy  ();
#line 3248 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3250 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CMovableModelEntity  :: ReceiveDamage  (penInflictor  , 
#line 3251 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
dmtType  , fDamageAmmount  , vHitPoint  , vDirection );
#line 3252 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
BOOL CProjectile::
#line 3259 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileFly(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileFly
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileFly expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3261 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3262 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3264 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3269 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3269 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3270 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3272 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(m_fFlyTime );
Jump(STATE_CURRENT, 0x01f50002, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50002_ProjectileFly_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50002
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3275 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3277 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3279 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , "Projectile") && 
#line 3280 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3282 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (epass  . penOther  , "Twister");
#line 3283 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3284 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3287 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50003, FALSE, EInternal());return TRUE;
#line 3288 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3289 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3290 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 3293 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fIgnoreTime  = 0.0f;
#line 3295 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3296 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  = ! ((! m_bCanHitHimself  && IsOfClass  (etouch  . penOther  , "Projectile") && 
#line 3297 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * etouch  . penOther ) -> m_prtType  == m_prtType ));
#line 3299 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3300 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (etouch  . penOther );
#line 3301 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50003, FALSE, EInternal());return TRUE;
#line 3302 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3303 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3304 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;

#line 3306 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed ){
#line 3307 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3308 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50003, FALSE, EInternal());return TRUE;
#line 3309 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3310 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3311 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;

#line 3313 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3314 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50003, FALSE, EInternal());return TRUE;
#line 3315 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3316 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50003_ProjectileFly_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50003

#line 3317 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3317 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3321 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileGuidedFly(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileGuidedFly
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileGuidedFly expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3323 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3324 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3326 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3327 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3327 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3328 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3330 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Jump(STATE_CURRENT,0x01f50007, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50007_ProjectileGuidedFly_03(const CEntityEvent &__eeInput)
#line 3331 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50007
if(!(_pTimer  -> CurrentTick  () < (m_fStartTime  + m_fFlyTime ))){ Jump(STATE_CURRENT,0x01f50008, FALSE, EInternal());return TRUE;}
#line 3332 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fWaitFrequency  = 0.1f;
#line 3340 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_penTarget  != NULL ){
#line 3342 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
EntityInfo  * pei  = (EntityInfo  *) (m_penTarget  -> GetEntityInfo  ());
#line 3343 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDesiredPosition ;
#line 3344 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetEntityInfoPosition  (m_penTarget  , pei  -> vSourceCenter  , vDesiredPosition );
#line 3345 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDesiredDirection  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Normalize  ();
#line 3347 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE aWantedHeading  = GetRelativeHeading  (vDesiredDirection );
#line 3352 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE aHeading  = GetRotationSpeed  (aWantedHeading  , m_aRotateSpeed  , fWaitFrequency );
#line 3355 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedDecreasingFactor  = ((180 - abs  (aWantedHeading )) / 180.0f);
#line 3357 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedIncreasingFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 100;
#line 3358 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fSpeedIncreasingFactor  = ClampDn  (fSpeedIncreasingFactor  , 1.0f);
#line 3360 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fMaxSpeed  = m_fGuidedMaxSpeedFactor  * fSpeedIncreasingFactor ;
#line 3361 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fMinSpeedRatio  = 0.5f;
#line 3362 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fWantedSpeed  = fMaxSpeed  * (fMinSpeedRatio  + (1 - fMinSpeedRatio ) * fSpeedDecreasingFactor );
#line 3364 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , - fWantedSpeed ));
#line 3367 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 75.0f * (1 + 0.5f * fSpeedDecreasingFactor );
#line 3370 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 50.0;
#line 3371 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fDistanceFactor  = ClampUp  (fDistanceFactor  , 4.0f);
#line 3372 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fRNDHeading  = (FRnd  () - 0.5f) * 180 * fDistanceFactor ;
#line 3373 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fRNDPitch  = (FRnd  () - 0.5f) * 90 * fDistanceFactor ;
#line 3376 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(abs  (aWantedHeading ) < 30.0f)
#line 3377 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3379 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE aWantedPitch  = GetRelativePitch  (vDesiredDirection );
#line 3380 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE aPitch  = GetRotationSpeed  (aWantedPitch  , m_aRotateSpeed  * 1.5f , fWaitFrequency );
#line 3382 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  + fRNDHeading  , aPitch  + fRNDPitch  , 0));
#line 3383 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3385 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
else 
#line 3386 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3387 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  , fDistanceFactor  * 40 , 0));
#line 3388 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3389 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3391 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(fWaitFrequency );
Jump(STATE_CURRENT, 0x01f50005, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50005_ProjectileGuidedFly_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50005
switch(__eeInput.ee_slEvent)
#line 3392 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3395 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3397 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3399 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , "Projectile") && 
#line 3400 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3402 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (epass  . penOther  , "Twister");
#line 3403 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3404 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3405 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3405 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3406 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3407 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3408 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):
#line 3410 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{const EDeath&e= (EDeath&)__eeInput;

#line 3411 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed )
#line 3412 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3413 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3414 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3414 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3415 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3416 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3417 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):
#line 3419 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{const ETimer&e= (ETimer&)__eeInput;

#line 3420 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50006, FALSE, EInternal());return TRUE;
#line 3421 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3422 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50006_ProjectileGuidedFly_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50006
Jump(STATE_CURRENT,0x01f50007, FALSE, EInternal());return TRUE;
#line 3423 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}BOOL CProjectile::H0x01f50008_ProjectileGuidedFly_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50008

#line 3424 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3424 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3427 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileGuidedFastFly(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileGuidedFastFly
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileGuidedFastFly expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3429 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3430 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3432 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3433 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3433 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3434 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3436 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Jump(STATE_CURRENT,0x01f5000c, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f5000c_ProjectileGuidedFastFly_03(const CEntityEvent &__eeInput)
#line 3437 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000c
if(!(_pTimer  -> CurrentTick  () < (m_fStartTime  + m_fFlyTime ))){ Jump(STATE_CURRENT,0x01f5000d, FALSE, EInternal());return TRUE;}
#line 3438 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fWaitFrequency  = 0.1f;
#line 3440 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_BEAST_BIG_PROJECTILE  && 
#line 3441 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
DistanceTo  (this  , m_penTarget ) < 20.0f && 
#line 3442 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
(m_fStartTime  + m_fFlyTime  - _pTimer  -> CurrentTick  ()) > 1.5f)
#line 3443 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3444 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fFlyTime  = _pTimer  -> CurrentTick  () - m_fStartTime  + 1.5f;
#line 3445 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3446 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_penTarget  != NULL ){
#line 3448 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
EntityInfo  * pei  = (EntityInfo  *) (m_penTarget  -> GetEntityInfo  ());
#line 3449 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDesiredPosition ;
#line 3450 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetEntityInfoPosition  (m_penTarget  , pei  -> vSourceCenter  , vDesiredPosition );
#line 3451 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDesiredDirection  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Normalize  ();
#line 3453 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE aWantedHeading  = GetRelativeHeading  (vDesiredDirection );
#line 3454 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE aHeading  = GetRotationSpeed  (aWantedHeading  , 5.0f , fWaitFrequency );
#line 3457 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedDecreasingFactor  = ((180 - abs  (aWantedHeading )) / 180.0f);
#line 3459 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedIncreasingFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 100;
#line 3460 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fSpeedIncreasingFactor  = ClampDn  (fSpeedIncreasingFactor  , 1.0f);
#line 3462 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fMaxSpeed  = m_fGuidedMaxSpeedFactor  * fSpeedIncreasingFactor ;
#line 3463 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fMinSpeedRatio  = 10.0f;
#line 3464 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fWantedSpeed  = fMaxSpeed  * (fMinSpeedRatio  + (1 - fMinSpeedRatio ) * fSpeedDecreasingFactor );
#line 3466 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , - fWantedSpeed ));
#line 3469 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 110.0f * (1 + 0.5f * fSpeedDecreasingFactor );
#line 3472 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 50.0;
#line 3473 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fDistanceFactor  = ClampUp  (fDistanceFactor  , 4.0f);
#line 3476 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(abs  (aWantedHeading ) < 30.0f)
#line 3477 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3478 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bLockedOn  = TRUE ;
#line 3480 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE aWantedPitch  = GetRelativePitch  (vDesiredDirection );
#line 3481 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE aPitch  = GetRotationSpeed  (aWantedPitch  , m_aRotateSpeed  * 1.5f , fWaitFrequency );
#line 3483 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  , aPitch  , 0));
#line 3484 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3486 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
else 
#line 3487 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3488 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bLockedOn )
#line 3489 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3490 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE3D aBankingUp ;
#line 3491 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
aBankingUp  = GetPlacement  () . pl_OrientationAngle ;
#line 3492 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
aBankingUp  (3) = 0.0f;
#line 3493 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPlacement  (CPlacement3D (GetPlacement  () . pl_PositionVector  , aBankingUp ));
#line 3494 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3495 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bLockedOn  = FALSE ;
#line 3497 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  , 400 , 0));
#line 3498 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3499 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3501 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(fWaitFrequency );
Jump(STATE_CURRENT, 0x01f5000a, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5000a_ProjectileGuidedFastFly_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000a
switch(__eeInput.ee_slEvent)
#line 3502 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 3506 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fIgnoreTime  = 0.0f;
#line 3508 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3509 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  = ! ((! m_bCanHitHimself  && IsOfClass  (etouch  . penOther  , "Projectile") && 
#line 3510 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * etouch  . penOther ) -> m_prtType  == m_prtType ));
#line 3511 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (etouch  . penOther  , "Demon");
#line 3512 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vTrans  = en_vCurrentTranslationAbsolute ;
#line 3513 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= Abs  (vTrans  . Normalize  () % FLOAT3D (etouch  . plCollision )) > 0.35;
#line 3515 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3516 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (etouch  . penOther );
#line 3517 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3517 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3518 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3520 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3521 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3523 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3525 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3527 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , "Projectile") && 
#line 3528 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3530 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (epass  . penOther  , "Twister");
#line 3532 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! (m_prtType  == PRT_DEMON_FIREBALL  && IsOfClass  (epass  . penOther  , "Projectile"));
#line 3533 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! (m_prtType  == PRT_BEAST_BIG_PROJECTILE  && IsOfClass  (epass  . penOther  , "Projectile"));
#line 3535 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3536 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3537 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3537 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3538 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3539 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3540 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):
#line 3542 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{const EDeath&e= (EDeath&)__eeInput;

#line 3543 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed )
#line 3544 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3545 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3546 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3546 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3547 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3548 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3549 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):
#line 3551 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{const ETimer&e= (ETimer&)__eeInput;

#line 3552 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5000b, FALSE, EInternal());return TRUE;
#line 3553 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3554 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f5000b_ProjectileGuidedFastFly_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000b
Jump(STATE_CURRENT,0x01f5000c, FALSE, EInternal());return TRUE;
#line 3555 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}BOOL CProjectile::H0x01f5000d_ProjectileGuidedFastFly_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000d

#line 3556 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3556 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3560 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileGuidedSlide(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileGuidedSlide
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileGuidedSlide expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3562 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3563 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3565 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3566 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3566 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3567 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3569 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Jump(STATE_CURRENT,0x01f50011, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50011_ProjectileGuidedSlide_03(const CEntityEvent &__eeInput)
#line 3570 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50011
if(!(_pTimer  -> CurrentTick  () < (m_fStartTime  + m_fFlyTime ))){ Jump(STATE_CURRENT,0x01f50012, FALSE, EInternal());return TRUE;}
#line 3571 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fWaitFrequency  = 0.1f;
#line 3572 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_penTarget  != NULL ){
#line 3574 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
EntityInfo  * pei  = (EntityInfo  *) (m_penTarget  -> GetEntityInfo  ());
#line 3575 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDesiredPosition ;
#line 3576 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
GetEntityInfoPosition  (m_penTarget  , pei  -> vSourceCenter  , vDesiredPosition );
#line 3577 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT3D vDesiredDirection  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Normalize  ();
#line 3579 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE aWantedHeading  = GetRelativeHeading  (vDesiredDirection );
#line 3580 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ANGLE aHeading  = GetRotationSpeed  (aWantedHeading  , m_aRotateSpeed  , fWaitFrequency );
#line 3583 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedDecreasingFactor  = ((180 - abs  (aWantedHeading )) / 180.0f);
#line 3585 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fSpeedIncreasingFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 100;
#line 3586 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fSpeedIncreasingFactor  = ClampDn  (fSpeedIncreasingFactor  , 1.0f);
#line 3588 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fMaxSpeed  = 30.0f * fSpeedIncreasingFactor ;
#line 3589 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fMinSpeedRatio  = 0.5f;
#line 3590 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fWantedSpeed  = fMaxSpeed  * (fMinSpeedRatio  + (1 - fMinSpeedRatio ) * fSpeedDecreasingFactor );
#line 3592 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , - fWantedSpeed ));
#line 3595 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 75.0f * (1 + 0.5f * fSpeedDecreasingFactor );
#line 3598 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fDistanceFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 50.0;
#line 3599 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
fDistanceFactor  = ClampUp  (fDistanceFactor  , 4.0f);
#line 3600 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
FLOAT fRNDHeading  = (FRnd  () - 0.5f) * 180 * fDistanceFactor ;
#line 3603 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(abs  (aWantedHeading ) < 30.0f)
#line 3604 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3606 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  + fRNDHeading  , 0 , 0));
#line 3607 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3609 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
else 
#line 3610 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3611 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  , 0 , 0));
#line 3612 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3613 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3615 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(fWaitFrequency );
Jump(STATE_CURRENT, 0x01f5000f, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5000f_ProjectileGuidedSlide_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000f
switch(__eeInput.ee_slEvent)
#line 3616 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3619 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3621 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3623 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , "Projectile") && 
#line 3624 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3626 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (epass  . penOther  , "Twister");
#line 3627 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3628 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3629 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3629 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3630 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3631 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3632 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):
#line 3634 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{const EDeath&e= (EDeath&)__eeInput;

#line 3635 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed )
#line 3636 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3637 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3638 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3638 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3639 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3640 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3641 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):
#line 3643 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{const ETimer&e= (ETimer&)__eeInput;

#line 3644 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50010, FALSE, EInternal());return TRUE;
#line 3645 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3646 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50010_ProjectileGuidedSlide_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50010
Jump(STATE_CURRENT,0x01f50011, FALSE, EInternal());return TRUE;
#line 3647 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}BOOL CProjectile::H0x01f50012_ProjectileGuidedSlide_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50012

#line 3648 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3648 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3652 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileSlide(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileSlide
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileSlide expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3654 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3655 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3657 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3658 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3658 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3659 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3661 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(m_fFlyTime );
Jump(STATE_CURRENT, 0x01f50014, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50014_ProjectileSlide_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50014
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3664 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3666 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3668 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , "Projectile") && 
#line 3669 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3671 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (epass  . penOther  , "Twister");
#line 3672 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(epass  . penOther  != m_penLauncher ){
#line 3673 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  = bHit ;
#line 3674 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3675 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3676 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3678 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_FLAME  && IsDerivedFromClass  ((CEntity  *) & * (epass  . penOther ) , "Enemy Base")){
#line 3679 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3680 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3682 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_AIRELEMENTAL_WIND  && IsDerivedFromClass  ((CEntity  *) & * (epass  . penOther ) , "MovableEntity")){
#line 3683 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3684 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3686 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50015, FALSE, EInternal());return TRUE;
#line 3687 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3688 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3689 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 3692 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fIgnoreTime  = 0.0f;
#line 3694 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3695 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  = ! (etouch  . penOther  -> GetRenderType  () & RT_BRUSH );
#line 3696 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_FLAME  && ! bHit  && ! m_bLeftFlame )
#line 3697 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3698 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SpawnFlame  (m_penLauncher  , etouch  . penOther  , GetPlacement  () . pl_PositionVector );
#line 3699 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_bLeftFlame  = TRUE ;
#line 3700 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3701 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(! bHit ){BounceSound  ();}
#line 3703 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (etouch  . penOther  , "Projectile") && 
#line 3704 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * etouch  . penOther ) -> m_prtType  == m_prtType ));
#line 3705 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3706 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (etouch  . penOther );
#line 3707 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50015, FALSE, EInternal());return TRUE;
#line 3708 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3710 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(en_vCurrentTranslationAbsolute  . Length  () < 0.25f * en_vDesiredTranslationRelative  . Length  ()){
#line 3711 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3712 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50015, FALSE, EInternal());return TRUE;
#line 3713 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3714 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3715 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;

#line 3717 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed ){
#line 3718 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3719 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50015, FALSE, EInternal());return TRUE;
#line 3720 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3721 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3722 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;

#line 3724 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3725 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50015, FALSE, EInternal());return TRUE;
#line 3726 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3727 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50015_ProjectileSlide_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50015

#line 3728 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3728 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3732 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileFlyRebounding(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileFlyRebounding
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileFlyRebounding expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 3734 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3735 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3737 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3738 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3738 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3739 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3741 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(m_fFlyTime );
Jump(STATE_CURRENT, 0x01f50017, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50017_ProjectileFlyRebounding_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50017
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3744 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3746 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3748 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , "Projectile") && 
#line 3749 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3751 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  &= ! IsOfClass  (epass  . penOther  , "Twister");
#line 3752 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3753 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3754 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50018, FALSE, EInternal());return TRUE;
#line 3755 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3756 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3757 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 3760 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fIgnoreTime  = 0.0f;
#line 3762 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3765 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  = (etouch  . penOther  -> GetRenderType  () == RT_BRUSH );
#line 3767 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bHit  && m_iRebounds  > 0){
#line 3769 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ReflectDirectionVectorByPlane  (etouch  . plCollision  , en_vCurrentTranslationAbsolute );
#line 3770 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ReflectRotationMatrixByPlane_cols  (etouch  . plCollision  , en_mRotation );
#line 3771 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_iRebounds  --;
#line 3772 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}else {
#line 3774 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
bHit  = ! ((! m_bCanHitHimself  && IsOfClass  (etouch  . penOther  , "Projectile") && 
#line 3775 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
((CProjectile  *) & * etouch  . penOther ) -> m_prtType  == m_prtType ));
#line 3777 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(bHit ){
#line 3778 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileTouch  (etouch  . penOther );
#line 3779 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50018, FALSE, EInternal());return TRUE;
#line 3780 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3781 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3782 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3783 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;

#line 3785 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed ){
#line 3786 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3787 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50018, FALSE, EInternal());return TRUE;
#line 3788 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3789 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE;
#line 3790 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;

#line 3792 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3793 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50018, FALSE, EInternal());return TRUE;
#line 3794 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3795 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50018_ProjectileFlyRebounding_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50018

#line 3796 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EEnd  ());
#line 3796 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3800 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_ELaunchProjectile, "CProjectile::Main expects 'ELaunchProjectile' as input!");  const ELaunchProjectile &eLaunch = (const ELaunchProjectile &)__eeInput;
#line 3802 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ASSERT  (eLaunch  . penLauncher  != NULL );
#line 3803 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penLauncher  = eLaunch  . penLauncher ;
#line 3804 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_prtType  = eLaunch  . prtType ;
#line 3805 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fSpeed  = eLaunch  . fSpeed ;
#line 3806 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fStretch  = eLaunch  . fStretch ;
#line 3807 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetPredictable  (TRUE );
#line 3809 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fIgnoreTime  = _pTimer  -> CurrentTick  () + 1.0f;
#line 3810 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_penLastDamaged  = NULL ;
#line 3812 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
switch(m_prtType ){
#line 3813 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_ROCKET : 
#line 3814 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_WALKER_ROCKET : 
#line 3815 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ROCKET : 
#line 3816 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_WOODEN_DART : 
#line 3817 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3818 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_RocketTrail_Prepare  (this );
#line 3819 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 3820 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3821 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GUFFY_PROJECTILE : break ;
#line 3822 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GRENADE : Particles_GrenadeTrail_Prepare  (this );break ;
#line 3823 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_CATMAN_FIRE : Particles_RocketTrail_Prepare  (this );break ;
#line 3824 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_FIRECRACKER : Particles_FirecrackerTrail_Prepare  (this );break ;
#line 3825 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_ROCKETMAN : Particles_Fireball01Trail_Prepare  (this );break ;
#line 3826 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ALT_GRANAT : 
#line 3827 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_BOMBERMAN : Particles_BombTrail_Prepare  (this );break ;
#line 3828 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVA_COMET : Particles_LavaTrail_Prepare  (this );break ;
#line 3829 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BIG_BOMB : Particles_LavaBombTrail_Prepare  (this );break ;
#line 3830 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BOMB : Particles_LavaBombTrail_Prepare  (this );break ;
#line 3831 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_PROJECTILE : Particles_Fireball01Trail_Prepare  (this );break ;
#line 3832 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_PROJECTILE : 
#line 3833 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_GUIDED_PROJECTILE : 
#line 3834 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEMON_FIREBALL : 
#line 3836 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Particles_FirecrackerTrail_Prepare  (this );
#line 3837 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
break ;
#line 3838 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FIREBALL : Particles_Fireball01Trail_Prepare  (this );break ;
#line 3839 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LASER_BLUE : Particles_LaserBlueTrail_Prepare  (this );break ;
#line 3840 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3842 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
switch(m_prtType )
#line 3843 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
{
#line 3844 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_WALKER_ROCKET : WalkerRocket  ();break ;
#line 3845 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ROCKET : PlayerRocket  ();break ;
#line 3846 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GRENADE : PlayerGrenade  ();break ;
#line 3847 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ALT_GRANAT : PlayerAltGrenade  ();break ;
#line 3848 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_FLAME : PlayerFlame  ();break ;
#line 3849 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LASER_RAY : PlayerLaserRay  ();break ;
#line 3850 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LASER_BLUE : PlayerLaserBlueRay  ();break ;
#line 3851 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_CATMAN_FIRE : CatmanProjectile  ();break ;
#line 3852 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_FIRECRACKER : HeadmanFirecracker  ();break ;
#line 3853 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_ROCKETMAN : HeadmanRocketman  ();break ;
#line 3854 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_BOMBERMAN : HeadmanBomberman  ();break ;
#line 3855 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BONEMAN_FIRE : BonemanProjectile  ();break ;
#line 3856 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_WOMAN_FIRE : WomanProjectile  ();break ;
#line 3857 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DRAGONMAN_FIRE : DragonmanProjectile  (DRAGONMAN_NORMAL );break ;
#line 3858 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DRAGONMAN_STRONG_FIRE : DragonmanProjectile  (DRAGONMAN_STRONG );break ;
#line 3859 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_STONEMAN_FIRE : ElementalRock  (ELEMENTAL_NORMAL  , ELEMENTAL_STONEMAN );break ;
#line 3860 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_STONEMAN_BIG_FIRE : ElementalRock  (ELEMENTAL_BIG  , ELEMENTAL_STONEMAN );break ;
#line 3861 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_STONEMAN_LARGE_FIRE : ElementalRock  (ELEMENTAL_LARGE  , ELEMENTAL_STONEMAN );break ;
#line 3862 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BIG_BOMB : LavaManBomb  ();break ;
#line 3863 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BOMB : LavaManBomb  ();break ;
#line 3864 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_STONE : ElementalRock  (ELEMENTAL_NORMAL  , ELEMENTAL_LAVAMAN );break ;
#line 3865 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ICEMAN_FIRE : ElementalRock  (ELEMENTAL_NORMAL  , ELEMENTAL_ICEMAN );break ;
#line 3866 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ICEMAN_BIG_FIRE : ElementalRock  (ELEMENTAL_BIG  , ELEMENTAL_ICEMAN );break ;
#line 3867 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ICEMAN_LARGE_FIRE : ElementalRock  (ELEMENTAL_LARGE  , ELEMENTAL_ICEMAN );break ;
#line 3868 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HUANMAN_FIRE : HuanmanProjectile  ();break ;
#line 3869 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_FISHMAN_FIRE : FishmanProjectile  ();break ;
#line 3870 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_MANTAMAN_FIRE : MantamanProjectile  ();break ;
#line 3871 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_CYBORG_LASER : CyborgLaser  ();break ;
#line 3872 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_CYBORG_BOMB : CyborgBomb  ();break ;
#line 3873 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVA_COMET : LavaBall  ();break ;
#line 3874 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_PROJECTILE : BeastProjectile  ();break ;
#line 3875 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_PROJECTILE : BeastBigProjectile  ();break ;
#line 3876 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_DEBRIS : BeastDebris  ();break ;
#line 3877 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_DEBRIS : BeastBigDebris  ();break ;
#line 3878 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_LASER : DevilLaser  ();break ;
#line 3879 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_ROCKET : DevilRocket  ();break ;
#line 3880 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_GUIDED_PROJECTILE : DevilGuidedProjectile  ();break ;
#line 3881 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GRUNT_PROJECTILE_SOL : GruntSoldierLaser  ();break ;
#line 3882 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GRUNT_PROJECTILE_COM : GruntCommanderLaser  ();break ;
#line 3883 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GUFFY_PROJECTILE : GuffyProjectile  ();break ;
#line 3884 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEMON_FIREBALL : DemonFireball  ();break ;
#line 3885 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LARVA_PLASMA : LarvaPlasma  ();break ;
#line 3886 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LARVA_TAIL_PROJECTILE : LarvaTail  ();break ;
#line 3887 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_WOODEN_DART : ShooterWoodenDart  ();break ;
#line 3888 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FIREBALL : ShooterFireball  ();break ;
#line 3889 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FLAME : ShooterFlame  ();break ;
#line 3890 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_AFTERBURNER_DEBRIS : AfterburnerDebris  ();break ;
#line 3891 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_AIRELEMENTAL_WIND : WindBlast  ();break ;
#line 3892 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_METEOR : Meteor  ();break ;
#line 3893 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
default  : ASSERTALWAYS  ("Unknown projectile type");
#line 3894 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3897 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_bLightSource ){SetupLightSource  (TRUE );}
#line 3900 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
m_fStartTime  = _pTimer  -> CurrentTick  ();
#line 3902 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(!(m_pmtMove  == PMT_GUIDED )){ Jump(STATE_CURRENT,0x01f5002f, FALSE, EInternal());return TRUE;}
#line 3903 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
STATE_CProjectile_ProjectileGuidedFly, TRUE;
Jump(STATE_CURRENT, 0x01f50019, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50019_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50019
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CProjectile_ProjectileGuidedFly, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01f5001a, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f5001a_Main_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001a
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x01f5002e, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f5002f_Main_23(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5002f
if(!(m_pmtMove  == PMT_GUIDED_FAST )){ Jump(STATE_CURRENT,0x01f5002d, FALSE, EInternal());return TRUE;}
#line 3905 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
STATE_CProjectile_ProjectileGuidedFastFly, TRUE;
Jump(STATE_CURRENT, 0x01f5001b, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5001b_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001b
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CProjectile_ProjectileGuidedFastFly, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01f5001c, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f5001c_Main_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001c
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x01f5002c, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f5002d_Main_21(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5002d
if(!(m_pmtMove  == PMT_FLYING )){ Jump(STATE_CURRENT,0x01f5002b, FALSE, EInternal());return TRUE;}
#line 3907 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
STATE_CProjectile_ProjectileFly, TRUE;
Jump(STATE_CURRENT, 0x01f5001d, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5001d_Main_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001d
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CProjectile_ProjectileFly, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01f5001e, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f5001e_Main_06(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001e
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x01f5002a, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f5002b_Main_19(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5002b
if(!(m_pmtMove  == PMT_SLIDING )){ Jump(STATE_CURRENT,0x01f50029, FALSE, EInternal());return TRUE;}
#line 3909 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
STATE_CProjectile_ProjectileSlide, TRUE;
Jump(STATE_CURRENT, 0x01f5001f, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5001f_Main_07(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001f
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CProjectile_ProjectileSlide, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01f50020, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f50020_Main_08(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50020
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x01f50028, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50029_Main_17(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50029
if(!(m_pmtMove  == PMT_FLYING_REBOUNDING )){ Jump(STATE_CURRENT,0x01f50027, FALSE, EInternal());return TRUE;}
#line 3911 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
STATE_CProjectile_ProjectileFlyRebounding, TRUE;
Jump(STATE_CURRENT, 0x01f50021, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50021_Main_09(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50021
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CProjectile_ProjectileFlyRebounding, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01f50022, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f50022_Main_10(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50022
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x01f50026, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50027_Main_15(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50027
if(!(m_pmtMove  == PMT_GUIDED_SLIDING )){ Jump(STATE_CURRENT,0x01f50025, FALSE, EInternal());return TRUE;}
#line 3913 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
STATE_CProjectile_ProjectileGuidedSlide, TRUE;
Jump(STATE_CURRENT, 0x01f50023, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50023_Main_11(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50023
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CProjectile_ProjectileGuidedSlide, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01f50024, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f50024_Main_12(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50024
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x01f50025, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50025_Main_13(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50025
Jump(STATE_CURRENT,0x01f50026, FALSE, EInternal());return TRUE;}
BOOL CProjectile::H0x01f50026_Main_14(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50026
Jump(STATE_CURRENT,0x01f50028, FALSE, EInternal());return TRUE;}
BOOL CProjectile::H0x01f50028_Main_16(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50028
Jump(STATE_CURRENT,0x01f5002a, FALSE, EInternal());return TRUE;}
BOOL CProjectile::H0x01f5002a_Main_18(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5002a
Jump(STATE_CURRENT,0x01f5002c, FALSE, EInternal());return TRUE;}
BOOL CProjectile::H0x01f5002c_Main_20(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5002c
Jump(STATE_CURRENT,0x01f5002e, FALSE, EInternal());return TRUE;}
BOOL CProjectile::H0x01f5002e_Main_22(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5002e

#line 3917 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
switch(m_prtType ){
#line 3918 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_WALKER_ROCKET : WalkerRocketExplosion  ();break ;
#line 3919 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ROCKET : PlayerRocketExplosion  ();break ;
#line 3920 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GRENADE : PlayerGrenadeExplosion  ();break ;
#line 3921 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_ALT_GRANAT : PlayerAltGrenadeExplosion  ();break ;
#line 3922 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LASER_RAY : PlayerLaserWave  ();break ;
#line 3923 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LASER_BLUE : PlayerLaserBlueWave  ();break ;
#line 3924 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_HEADMAN_BOMBERMAN : HeadmanBombermanExplosion  ();break ;
#line 3925 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_CYBORG_BOMB : CyborgBombExplosion  ();break ;
#line 3926 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVA_COMET : LavamanBombDebrisExplosion  ();break ;
#line 3927 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BIG_BOMB : LavamanBombExplosion  ();break ;
#line 3928 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LAVAMAN_BOMB : LavamanBombDebrisExplosion  ();break ;
#line 3929 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_PROJECTILE : BeastBigProjectileExplosion  ();break ;
#line 3930 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_PROJECTILE : BeastProjectileExplosion  ();break ;
#line 3931 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_DEBRIS : BeastDebrisExplosion  ();break ;
#line 3932 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_BEAST_BIG_DEBRIS : BeastBigDebrisExplosion  ();break ;
#line 3933 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_ROCKET : DevilRocketExplosion  ();break ;
#line 3934 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEVIL_GUIDED_PROJECTILE : DevilGuidedProjectileExplosion  ();break ;
#line 3935 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_GUFFY_PROJECTILE : GuffyProjectileExplosion  ();break ;
#line 3936 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_DEMON_FIREBALL : DemonFireballExplosion  ();break ;
#line 3937 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LARVA_PLASMA : LarvaPlasmaExplosion  ();break ;
#line 3938 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_LARVA_TAIL_PROJECTILE : LarvaTailExplosion  ();break ;
#line 3939 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_WOODEN_DART : ShooterWoodenDartExplosion  ();break ;
#line 3940 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_SHOOTER_FIREBALL : ShooterFireballExplosion  ();break ;
#line 3941 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
case PRT_METEOR : MeteorExplosion  ();break ;
#line 3942 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
}
#line 3945 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(!(m_fWaitAfterDeath  > 0.0f)){ Jump(STATE_CURRENT,0x01f50032, FALSE, EInternal());return TRUE;}
#line 3946 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SwitchToEditorModel  ();
#line 3947 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
ForceFullStop  ();
#line 3948 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 3950 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
if(m_bLightSource ){SetupLightSource  (FALSE );}
#line 3951 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
SetTimerAfter(m_fWaitAfterDeath );
Jump(STATE_CURRENT, 0x01f50030, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50030_Main_24(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50030
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01f50031, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f50031_Main_25(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50031
;Jump(STATE_CURRENT,0x01f50032, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50032_Main_26(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50032

#line 3954 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Destroy  ();
#line 3956 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3956 "V:/Programs/SamSDK/Sources/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};