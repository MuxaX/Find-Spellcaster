/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"

#include "StdH.h"

#include <EntitiesMP/EnemyFly.h>
#include <EntitiesMP/EnemyFly_tables.h>
void CEnemyFly::SetDefaultProperties(void) {
  m_EeftType = EFT_FLY_GROUND_AIR ;
  m_bInAir = FALSE ;
  m_bAirAttack = FALSE ;
  m_bStartInAir = FALSE ;
  m_fGroundToAirSpeed = 2.0f;
  m_fAirToGroundSpeed = 4.0f;
  m_fAirToGroundMin = 1.0f;
  m_fAirToGroundMax = 2.0f;
  m_fFlyHeight = 2.0f;
  m_fFlyWalkSpeed = 1.0f;
  m_aFlyWalkRotateSpeed = AngleDeg(10.0f);
  m_fFlyAttackRunSpeed = 1.0f;
  m_aFlyAttackRotateSpeed = AngleDeg(10.0f);
  m_fFlyCloseRunSpeed = 1.0f;
  m_aFlyCloseRotateSpeed = AngleDeg(10.0f);
  m_fFlyAttackDistance = 50.0f;
  m_fFlyCloseDistance = 10.0f;
  m_fFlyAttackFireTime = 2.0f;
  m_fFlyCloseFireTime = 1.0f;
  m_fFlyStopDistance = 0.0f;
  m_fFlyIgnoreRange = 200.0f;
  m_fFlyLockOnEnemyTime = 0.0f;
  m_bFlyToMarker = FALSE ;
  CEnemyBase::SetDefaultProperties();
}
  FLOAT & CEnemyFly::GetProp(FLOAT & m_fBase) 
#line 62 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
{
#line 63 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(m_bInAir ){
#line 64 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return * ((& m_fBase ) + (& m_fFlyWalkSpeed  - & m_fWalkSpeed ));
#line 65 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}else {
#line 66 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return m_fBase ;
#line 67 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
#line 68 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
  FLOAT3D CEnemyFly::PlayerDestinationPos(void) 
#line 72 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
{
#line 74 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(! m_bInAir ){
#line 76 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return CEnemyBase  :: PlayerDestinationPos  ();
#line 77 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
#line 80 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
FLOAT fDist  = CalcDist  (m_penEnemy );
#line 82 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
FLOAT fHeight ;
#line 84 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(fDist  <= m_fFlyCloseDistance ){
#line 86 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
fHeight  = m_fFlyHeight ;
#line 88 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}else {
#line 90 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
fHeight  = m_fFlyHeight  + fDist  / 5.0f;
#line 91 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
#line 94 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return 
#line 95 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_penEnemy  -> GetPlacement  () . pl_PositionVector  
#line 96 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
+ FLOAT3D (m_penEnemy  -> en_mRotation  (1 , 2) , m_penEnemy  -> en_mRotation  (2 , 2) , m_penEnemy  -> en_mRotation  (3 , 2)) 
#line 97 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
* fHeight ;
#line 98 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
  
#line 101 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
void CEnemyFly::StartPathFinding(void) 
#line 102 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
{
#line 103 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(m_bInAir ){
#line 104 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_dtDestination  = DT_PLAYERSPOTTED ;
#line 105 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_vPlayerSpotted  = PlayerDestinationPos  ();
#line 106 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}else {
#line 107 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
CEnemyBase  :: StartPathFinding  ();
#line 108 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
#line 109 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
  void CEnemyFly::AdjustDifficulty(void) 
#line 112 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
{
#line 113 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
FLOAT fMoveSpeed  = GetSP  () -> sp_fEnemyMovementSpeed ;
#line 114 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
FLOAT fAttackSpeed  = GetSP  () -> sp_fEnemyMovementSpeed ;
#line 116 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_fFlyAttackFireTime  *= 1 / fAttackSpeed ;
#line 117 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_fFlyCloseFireTime  *= 1 / fAttackSpeed ;
#line 118 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_fFlyLockOnEnemyTime  *= 1 / fAttackSpeed ;
#line 121 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_fFlyAttackRunSpeed  *= fMoveSpeed ;
#line 122 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_aFlyAttackRotateSpeed  *= fMoveSpeed ;
#line 123 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_fFlyCloseRunSpeed  *= fMoveSpeed ;
#line 124 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_aFlyCloseRotateSpeed  *= fMoveSpeed ;
#line 125 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_fGroundToAirSpeed  *= fMoveSpeed ;
#line 126 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_fAirToGroundSpeed  *= fMoveSpeed ;
#line 128 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
CEnemyBase  :: AdjustDifficulty  ();
#line 129 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
  BOOL CEnemyFly::CanHitEnemy(CEntity * penTarget,FLOAT fCosAngle) {
#line 133 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(IsInPlaneFrustum  (penTarget  , fCosAngle )){
#line 134 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return IsVisibleCheckAll  (penTarget );
#line 135 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
#line 136 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return FALSE ;
#line 137 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
  ULONG CEnemyFly::SetDesiredMovement(void) 
#line 145 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
{
#line 147 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(! m_bInAir ){
#line 149 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return CEnemyBase  :: SetDesiredMovement  ();
#line 150 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
#line 153 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
ULONG  ulFlags  = CEnemyBase  :: SetDesiredMovement  ();
#line 156 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(m_fMoveSpeed  > 0.0f){
#line 158 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
FLOAT3D vTranslation  = (m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ) * ! en_mRotation ;
#line 159 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
vTranslation  (1) = 0.0f;
#line 160 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(vTranslation  (3) > 0){
#line 161 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
vTranslation  (3) = 0.0f;
#line 162 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
#line 163 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
vTranslation  . Normalize  ();
#line 164 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
vTranslation  *= m_fMoveSpeed ;
#line 165 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetDesiredTranslation  (vTranslation );
#line 166 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
#line 168 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return ulFlags ;
#line 169 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
  
#line 175 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
void CEnemyFly::SetEntityPosition() {
#line 176 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
switch(m_EeftType ){
#line 177 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
case EFT_GROUND_ONLY : 
#line 178 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
case EFT_FLY_GROUND_GROUND : 
#line 179 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bAirAttack  = FALSE ;
#line 180 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bStartInAir  = m_bInAir  = FALSE ;
#line 181 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bFlyToMarker  = FALSE ;
#line 182 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetPhysicsFlags  ((GetPhysicsFlags  () & ~ EPF_MODEL_FLYING ) | EPF_MODEL_WALKING );
#line 183 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
ChangeCollisionToGround  ();
#line 184 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
break ;
#line 186 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
case EFT_FLY_GROUND_AIR : 
#line 187 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bAirAttack  = TRUE ;
#line 188 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bStartInAir  = m_bInAir  = FALSE ;
#line 189 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bFlyToMarker  = FALSE ;
#line 190 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetPhysicsFlags  ((GetPhysicsFlags  () & ~ EPF_MODEL_FLYING ) | EPF_MODEL_WALKING );
#line 191 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
ChangeCollisionToGround  ();
#line 192 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
break ;
#line 194 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
case EFT_FLY_AIR_GROUND : 
#line 195 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bAirAttack  = FALSE ;
#line 196 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bStartInAir  = m_bInAir  = TRUE ;
#line 197 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bFlyToMarker  = TRUE ;
#line 198 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetPhysicsFlags  ((GetPhysicsFlags  () & ~ EPF_MODEL_WALKING ) | EPF_MODEL_FLYING );
#line 199 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
ChangeCollisionToAir  ();
#line 200 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
break ;
#line 202 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
case EFT_FLY_ONLY : 
#line 203 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
case EFT_FLY_AIR_AIR : 
#line 204 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bAirAttack  = TRUE ;
#line 205 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bStartInAir  = m_bInAir  = TRUE ;
#line 206 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bFlyToMarker  = TRUE ;
#line 207 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetPhysicsFlags  ((GetPhysicsFlags  () & ~ EPF_MODEL_WALKING ) | EPF_MODEL_FLYING );
#line 208 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
ChangeCollisionToAir  ();
#line 209 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
break ;
#line 210 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
#line 211 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
StandingAnim  ();
#line 212 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
  FLOAT CEnemyFly::AirToGroundAnim(void) {return _pTimer  -> TickQuantum ;}
  FLOAT CEnemyFly::GroundToAirAnim(void) {return _pTimer  -> TickQuantum ;}
  void CEnemyFly::ChangeCollisionToAir(void) {}
  void CEnemyFly::ChangeCollisionToGround(void) {}
BOOL CEnemyFly::
#line 267 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
ReturnToStartPosition(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_ReturnToStartPosition
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::ReturnToStartPosition expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 269 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_BeIdle, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 305 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
BeWounded(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_BeWounded
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EDamage, "CEnemyFly::BeWounded expects 'EDamage' as input!");  const EDamage &eDamage = (const EDamage &)__eeInput;
#line 307 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(!(! (m_EeftType  != EFT_FLY_ONLY  && m_bInAir  && ((IRnd  () & 3) == 0)))){ Jump(STATE_CURRENT,0x01370006, FALSE, EInternal());return TRUE;}
#line 308 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_BeWounded, FALSE, eDamage );return TRUE;Jump(STATE_CURRENT,0x01370005, FALSE, EInternal());return TRUE;}BOOL CEnemyFly::H0x01370006_BeWounded_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370006
if(!(TRUE )){ Jump(STATE_CURRENT,0x01370004, FALSE, EInternal());return TRUE;}
#line 310 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bAirAttack  = FALSE ;
#line 311 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
STATE_CEnemyFly_AirToGround, TRUE;
Jump(STATE_CURRENT, 0x01370002, FALSE, EBegin());return TRUE;}BOOL CEnemyFly::H0x01370002_BeWounded_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370002
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyFly_AirToGround, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01370003, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyFly::H0x01370003_BeWounded_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370003
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x01370004, FALSE, EInternal());return TRUE;}BOOL CEnemyFly::H0x01370004_BeWounded_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370004
Jump(STATE_CURRENT,0x01370005, FALSE, EInternal());return TRUE;}
BOOL CEnemyFly::H0x01370005_BeWounded_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370005

#line 313 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Return(STATE_CURRENT,EReturn  ());
#line 313 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 322 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
AirToGround(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_AirToGround
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::AirToGround expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 325 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetDesiredTranslation  (FLOAT3D (0 , - m_fAirToGroundSpeed  , 0));
#line 326 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 327 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
WalkingAnim  ();
#line 328 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01370008, FALSE, EBegin());return TRUE;}BOOL CEnemyFly::H0x01370008_AirToGround_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370008
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 332 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(etouch  . penOther  -> GetRenderType  () & RT_BRUSH ){
#line 333 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , 0));
#line 334 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
UnsetTimer();Jump(STATE_CURRENT,0x01370009, FALSE, EInternal());return TRUE;
#line 335 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}
#line 336 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return TRUE;
#line 337 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;
return FALSE;}ASSERT(FALSE);break;default:{return TRUE;}ASSERT(FALSE);break;
#line 340 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}return TRUE;}BOOL CEnemyFly::H0x01370009_AirToGround_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370009

#line 342 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetPhysicsFlags  ((GetPhysicsFlags  () & ~ EPF_MODEL_FLYING ) | EPF_MODEL_WALKING );
#line 343 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bInAir  = FALSE ;
#line 344 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
ChangeCollisionToGround  ();
#line 346 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetTimerAfter(AirToGroundAnim  ());
Jump(STATE_CURRENT, 0x0137000a, FALSE, EBegin());return TRUE;}BOOL CEnemyFly::H0x0137000a_AirToGround_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0137000a
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x0137000b, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;
return FALSE;}ASSERT(FALSE);break;default:{return TRUE;}ASSERT(FALSE);break;
#line 351 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}return TRUE;}BOOL CEnemyFly::H0x0137000b_AirToGround_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0137000b

#line 352 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Return(STATE_CURRENT,EReturn  ());
#line 352 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 356 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
GroundToAir(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_GroundToAir
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::GroundToAir expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 359 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetPhysicsFlags  ((GetPhysicsFlags  () & ~ EPF_MODEL_WALKING ) | EPF_MODEL_FLYING );
#line 360 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
m_bInAir  = TRUE ;
#line 361 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetDesiredTranslation  (FLOAT3D (0 , m_fGroundToAirSpeed  , 0));
#line 362 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 363 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
ChangeCollisionToAir  ();
#line 365 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetTimerAfter(GroundToAirAnim  ());
Jump(STATE_CURRENT, 0x0137000d, FALSE, EBegin());return TRUE;}BOOL CEnemyFly::H0x0137000d_GroundToAir_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0137000d
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;
return FALSE;}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x0137000e, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default:{return TRUE;}ASSERT(FALSE);break;
#line 370 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}return TRUE;}BOOL CEnemyFly::H0x0137000e_GroundToAir_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0137000e

#line 372 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
WalkingAnim  ();
#line 373 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetTimerAfter(Lerp  (m_fAirToGroundMin  , m_fAirToGroundMax  , FRnd  ()));
Jump(STATE_CURRENT, 0x0137000f, FALSE, EBegin());return TRUE;}BOOL CEnemyFly::H0x0137000f_GroundToAir_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0137000f
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;
return FALSE;}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01370010, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default:{return TRUE;}ASSERT(FALSE);break;
#line 378 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}return TRUE;}BOOL CEnemyFly::H0x01370010_GroundToAir_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370010

#line 379 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , 0));
#line 380 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Return(STATE_CURRENT,EReturn  ());
#line 380 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 389 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
AttackEnemy(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_AttackEnemy
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::AttackEnemy expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 392 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(!(m_bAirAttack )){ Jump(STATE_CURRENT,0x0137001a, FALSE, EInternal());return TRUE;}
#line 394 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(!(! m_bInAir )){ Jump(STATE_CURRENT,0x01370014, FALSE, EInternal());return TRUE;}
#line 395 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
STATE_CEnemyFly_GroundToAir, TRUE;
Jump(STATE_CURRENT, 0x01370012, FALSE, EBegin());return TRUE;}BOOL CEnemyFly::H0x01370012_AttackEnemy_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370012
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyFly_GroundToAir, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01370013, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyFly::H0x01370013_AttackEnemy_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370013
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x01370014, FALSE, EInternal());return TRUE;}BOOL CEnemyFly::H0x01370014_AttackEnemy_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370014
Jump(STATE_CURRENT,0x01370019, FALSE, EInternal());return TRUE;}BOOL CEnemyFly::H0x0137001a_AttackEnemy_09(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0137001a
if(!(TRUE )){ Jump(STATE_CURRENT,0x01370018, FALSE, EInternal());return TRUE;}
#line 400 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(!(m_bInAir )){ Jump(STATE_CURRENT,0x01370017, FALSE, EInternal());return TRUE;}
#line 401 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
STATE_CEnemyFly_AirToGround, TRUE;
Jump(STATE_CURRENT, 0x01370015, FALSE, EBegin());return TRUE;}BOOL CEnemyFly::H0x01370015_AttackEnemy_04(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370015
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyFly_AirToGround, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01370016, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyFly::H0x01370016_AttackEnemy_05(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370016
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x01370017, FALSE, EInternal());return TRUE;}BOOL CEnemyFly::H0x01370017_AttackEnemy_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370017
Jump(STATE_CURRENT,0x01370018, FALSE, EInternal());return TRUE;}BOOL CEnemyFly::H0x01370018_AttackEnemy_07(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370018
Jump(STATE_CURRENT,0x01370019, FALSE, EInternal());return TRUE;}
BOOL CEnemyFly::H0x01370019_AttackEnemy_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01370019

#line 405 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_AttackEnemy, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 409 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Hit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_Hit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::Hit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 411 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(m_bInAir ){
#line 412 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Jump(STATE_CURRENT, STATE_CEnemyFly_FlyHit, TRUE, EVoid());return TRUE;
#line 413 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}else {
#line 414 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Jump(STATE_CURRENT, STATE_CEnemyFly_GroundHit, TRUE, EVoid());return TRUE;
#line 415 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
} ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 419 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Fire(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_Fire
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::Fire expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 421 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
if(m_bInAir ){
#line 422 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Jump(STATE_CURRENT, STATE_CEnemyFly_FlyFire, TRUE, EVoid());return TRUE;
#line 423 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
}else {
#line 424 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Jump(STATE_CURRENT, STATE_CEnemyFly_GroundFire, TRUE, EVoid());return TRUE;
#line 425 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
} ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 431 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Death(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_Death
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::Death expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 433 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetPhysicsFlags  ((GetPhysicsFlags  () & ~ EPF_MODEL_FLYING ) | EPF_MODEL_WALKING );
#line 434 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
ChangeCollisionToGround  ();
#line 435 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Death, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 444 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
MainLoop(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_MainLoop
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::MainLoop expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 445 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
SetEntityPosition  ();
#line 446 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_MainLoop, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 450 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 451 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Return(STATE_CURRENT,EVoid());
#line 451 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 458 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
GroundHit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_GroundHit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::GroundHit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 460 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Return(STATE_CURRENT,EReturn  ());
#line 460 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 463 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
GroundFire(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_GroundFire
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::GroundFire expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 465 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Return(STATE_CURRENT,EReturn  ());
#line 465 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 469 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
FlyHit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_FlyHit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::FlyHit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 471 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Return(STATE_CURRENT,EReturn  ());
#line 471 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyFly::
#line 475 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
FlyFire(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyFly_FlyFire
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyFly::FlyFire expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 477 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
Return(STATE_CURRENT,EReturn  ());
#line 477 "V:/Programs/SamSDK/Sources/EntitiesMP/EnemyFly.es"
return TRUE; ASSERT(FALSE); return TRUE;};